<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Dot Net | Rahul Nath]]></title>
  <link href="http://rahulpnath.com/blog/tag/dot-net/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2014-10-18T18:25:42+05:30</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[C# google image search]]></title>
    <link href="http://rahulpnath.com/blog/c-google-image-search/"/>
    <updated>2010-10-24T11:59:00+05:30</updated>
    <id>http://rahulpnath.com/blog/c-google-image-search</id>
    <content type="html"><![CDATA[<p>Need not much of an explanation I guess.
The title has it all&hellip;.
&hellip;.a C# API for searching images from google.
Works on Regex for matching the image URL from the HTML returned for the image tag search.This might stop working anytime google changes the formatting.
Even the current regex is not returning all the images from a page.Working on that though..would be fixed in the next release<em>.
I started this to try the AsynEnumerator from <a href="http://www.wintellect.com/Resources/Downloads">PowerThreading </a>Library by Wintellect.
I guess i&rsquo;ve not understood it fully and there is an overuse of it in this version..that too would be looked into the next release</em>.</p>

<p>Download VS2010 source <a href="http://rahulpnath.files.wordpress.com/2011/07/imagesearch_2010.jpg">code</a> (right click and save link as and  rename to .rar)
Download VS2008 source <a href="http://rahulpnath.files.wordpress.com/2011/02/imagesearch_2008.jpg">code</a> (right click and save link as and  rename to .rar)</p>

<p>PS: Since the search results format is changing often the code might not work sometimes.Doing my best to keep it updated and working.Do check the comments too to see if the regex match string is changed.Sometimes I might not get time to update the solution,but would just leave a comment.Latest comment should be the best to match with :)</p>

<p>*Conditions Apply: might be there :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synchronize SQL Server database objects]]></title>
    <link href="http://rahulpnath.com/blog/synchronize-sql-server-database-objects/"/>
    <updated>2010-07-01T21:11:00+05:30</updated>
    <id>http://rahulpnath.com/blog/synchronize-sql-server-database-objects</id>
    <content type="html"><![CDATA[<p><img class ="left" alt="Database Synchronization" src="{{ site.images_root}}/database_sync.jpg" />
Updating an old database, with newly created/modified database objects(mostly stored procedures,views,functions and table value parameters), from a new database was a very common,tedious,error prone task that was performed at my workplace for the past few months.This came up with the client requesting to retain their existing data and just make updates to their old database from our development database(which of course is the new/latest one), whenever a deliverable was made.<br/>
When the very work I do is to automate peoples work,I felt perturbed seeing this being done manually.So decided on to automate it :)<br/>
Writing SQL scripts would be db expert way I guess.But I am no expert in that so decided to do it in my way.<br/>
The .Net way :)<br/>
Thanks to the whole concept of .Net and Microsoft for having exposed such complex functionalities in the most elegant way &hellip;.. <a href="http://msdn.microsoft.com/en-us/library/ms162169.aspx">SMO</a>(SQL Server Management Objects).<br/>
You have to add a reference to Microsoft.SqlServer.Smo and a few other assemblies(Check the  source code for more details).<br/>
Rest everything the API provides.</p>

<p>Code quality might not be that good.Just did it in an hour :)<br/>
A help is there within the app.</p>

<p>Thanks to .Net once more :)</p>

<!--- Download the source [code ](http://www.4shared.com/document/EuSkVkhN/Db_Reconcile.html)(rename to .rar ) --->

]]></content>
  </entry>
  
</feed>
