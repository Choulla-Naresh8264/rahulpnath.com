<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rahul Nath]]></title>
  <link href="http://rahulpnath.com/atom.xml" rel="self"/>
  <link href="http://rahulpnath.com/"/>
  <updated>2014-08-07T06:12:12+05:30</updated>
  <id>http://rahulpnath.com/</id>
  <author>
    <name><![CDATA[Rahul Nath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KnockoutJS for XAML Developers]]></title>
    <link href="http://rahulpnath.com/blog/knockoutjs-for-xaml-developers/"/>
    <updated>2014-07-08T05:05:39+05:30</updated>
    <id>http://rahulpnath.com/blog/knockoutjs-for-xaml-developers</id>
    <content type="html"><![CDATA[<p>After a very long time since I have actually wanted to move out to web development, recently I have started developing a website as part of my personal project, along with a friend of mine. I have been into desktop/mobile development on Microsoft technologies, using XAML for a very long time. <a href="http://www.rahulpnath.com/blog/tag/mvvm/">Model-View-View Model (MVVM)</a> is a pattern that got popular because of the powerful binding engine in XAML. It is always comforting to see familiar patterns while moving into unexplored technology areas. Same is the reason I chose to explore <a href="http://knockoutjs.com/index.html">KnockoutJS</a>(KO), which simplifies dynamic JavaScript UIs with the MVVM pattern.</p>

<p><img src="http://rahulpnath.com/images/MVVM_Knockoutjs.jpg" alt="MVVM Knockout" /></p>

<p>KnockoutJS acts as the binding engine in XAML and binds your ViewModel(VM) with your View as shown in the figure. As you expect, like in XAML it provides a way to specify declarative-bindings on html using the <a href="http://knockoutjs.com/documentation/binding-syntax.html">data-bind</a> attribute and is also widely <a href="http://knockoutjs.com/documentation/browser-support.html">supported across different browsers</a>. The Model is the data that is populated from the server after your business logics applied,  mostly populated out of Ajax JSON calls from a web service/api. This Model data might mostly need some transformation to map to your View needs which is what exactly the ViewModel does. It transforms the Model data and wraps over it to provide features like 2-way-binding, client side validation, transformation of properties, UI specific state and a lot more</p>

<p>We will see below how some of the major constructs in XAML map over to KnockoutJS.</p>

<blockquote><p><em>I assume that you are a XAML developer and am not including detailed code samples for the XAML part and would be just mentioning them.</em></p></blockquote>

<p><strong>1. INotifyPropertyChanged</strong></p>

<p>Notifying data bounded clients on updates to the underlying bound data is a typical scenario in XAML, where we use <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged(v=vs.110">INotifyPropertyChanged</a>.aspx) interface. This is also required on web pages and is handled by KO using <em><a href="http://knockoutjs.com/documentation/observables.html">observables</a></em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">personVM</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Name</span><span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="s1">&#39;Rahul&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">Age</span><span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Declaring the property as an observable, makes any changes to the property immediately reflect on the bound UI elements, just like it happens on a property of a class that implements INotifyPropertyChanged.</p>

<pre class="codepen" data-height="300" data-type="js" data-href="CuIfK" data-user="rahulpnath"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p><strong>2. DataContext</strong></p>

<p>In XAML we set the DataContext as the ViewModel to start binding the data from the ViewModel on the UI. Similarly in KO we have to call on to <em>applyBindings </em>method, passing on the ViewModel object to bind. You can see this in the above sample. You can also pass in an additional parameter indicating the part of the document that you want to explicitly bind to.</p>

<p><strong>3. DataBinding</strong></p>

<p>Binding the data to the UI in XAML is done declaratively using the <a href="http://msdn.microsoft.com/en-us/library/system.windows.data.binding(v=vs.110">Binding</a>.aspx) syntax. Similarly in KO we use the <a href="http://knockoutjs.com/documentation/binding-syntax.html">data-bind</a> attribute to bind to a registered, built-in or custom, binding handler. As opposed to XAML where we bind to different properties, in KO all bindings are mentioned in the same data-bind attribute, separated by comma. A binding in KO consists of a name value pair separated by a colon, where the name corresponds to the binding handler/the property that we are binding to and the value from the VM that we need it to be bound to. A simple example of binding to the text property of a label would be <em>data-bind=&ldquo;text: Name&rdquo; . </em>You can also use the <a href="http://knockoutjs.com/documentation/with-binding.html">with binding</a> to create binding contexts for descendant elements as in XAML</p>

<p><strong>4. INotifyCollectionChanged</strong></p>

<p>In XAML updates to a collection is usually handled using an <a href="http://msdn.microsoft.com/en-us/library/ms668604(v=vs.110">ObservableCollection</a>.aspx), which notifies the UI whenever an item is added/removed to the collection. Similarly in KO you can use <em>observableArray</em>, which behaves the same as ObservableCollection. It notifies the bound UI elements whenever an element is added/removed from the array. Updates or changes to individual properties on the actual objects in the array is notified to the UI only if the property is an <em>observable, </em>as in XAML. In the below sample, you can try adding an observable item or a non-observable item to the list. As soon as you add an item it reflects in the list. But selecting and editing an item will reflect in the list only if you are editing an observable item. </p>

<pre class="codepen" data-height="300" data-type="js" data-href="FreIv" data-user="rahulpnath"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p><strong>5. Dependent Properties</strong></p>

<p>In XAML when there are properties dependent on others , to notify changes we have to explicitly call RaisePropertyChanged on all the dependent properties. A very common example is below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="kt">string</span> <span class="n">firstName</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span> <span class="kt">string</span> <span class="n">FirstName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">firstName</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">set</span>
</span><span class='line'>   <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">firstName</span><span class="p">!=</span> <span class="k">value</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">firstName</span><span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>            <span class="n">OnPropertyChanged</span><span class="p">(</span><span class="s">&quot;FirstName&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">OnPropertyChanged</span><span class="p">(</span><span class="s">&quot;FullName&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="kt">string</span> <span class="n">FullName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">FirstName</span> <span class="p">+</span><span class="s">&quot; &quot;</span> <span class="p">+</span> <span class="n">LastName</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here whenever FirstName is updated to notify UI elements bound to FullName would be updated only if we explicitly call PropertyChanged on FullName property too. In KO this is handled using <a href="http://knockoutjs.com/documentation/computedObservables.html">computed observables</a> and is much more elegant.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">fullName</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">();</span>
</span><span class='line'><span class="p">},</span> <span class="k">this</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>6. Commanding</strong></p>

<p>Commanding is how user interactions are bound to actions/functions on ViewModel, which will in turn perform something useful for the user. Like e.g. clicking a button. In KO this is handled using the same <a href="http://knockoutjs.com/documentation/click-binding.html">data-bind</a> attribute using key’s corresponding to event handlers. &#8220;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;button</span> <span class="na">data-bind=</span><span class="s">&quot;click: performSomeAction&quot;</span><span class="nt">&gt;</span>Click me<span class="nt">&lt;/button&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>7. Value Converters </strong></p>

<p>The <a href="http://msdn.microsoft.com/en-us/library/system.windows.data.ivalueconverter(v=vs.110">IValueConverter</a>.aspx) interface is to create a converter that can be applied on a Binding to provide custom logic on the data that gets bounded to the UI element. For a similar functionality in KO, there is <a href="http://knockoutjs.com/documentation/computedObservables.html">writable computed observable</a> to convert to and from a specific format of data. The read and write function on the computed observable, corresponds to the Convert and ConvertBack functions on IValueConverter on XAML.</p>

<pre class="codepen" data-height="300" data-type="js" data-href="dJhLm" data-user="rahulpnath"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p>There are a lot of useful resources on the web that are freely available to get started with KnockoutJS. Some of them are listed below</p>

<ul>
<li><p><a href="http://knockoutjs.com/documentation/introduction.html">Official Documentation</a></p></li>
<li><p><a href="http://learn.knockoutjs.com/">Learn By Doing</a></p></li>
<li><p><a href="https://www.youtube.com/results?search_query=knockout+javascript">Videos</a></p></li>
<li><p><a href="http://channel9.msdn.com/Search?term=knockout#ch9Search">More Videos</a></p></li>
</ul>


<p>Hope you find this useful to easily understand KnockoutJS, re-applying your XAML knowledge . Do drop in a comment in case you find any other similarities with XAML that I have missed mentioning here and I would be happy to add it in. I am sure I have not covered it completely!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks to Everyone Who Attended Our Talk at Microsoft India, Hyderabad]]></title>
    <link href="http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad/"/>
    <updated>2014-06-18T05:52:37+05:30</updated>
    <id>http://rahulpnath.com/blog/thanks-to-everyone-who-attended-our-talk-at-microsoft-india-hyderabad</id>
    <content type="html"><![CDATA[<p>Thanks to everyone who attended our(<a href="https://twitter.com/techgd">Gautam</a> and mine) talk on Getting Started with Windows Phone and Store application on June 18, Tuesday as part of the Readiness training at Microsoft. Special thanks to <a href="https://twitter.com/vamsitp">Vamsi</a> for assisting us throughout. I hope you all enjoyed the session as much as we did. Here are some follow up information that might help you on the way forward. Since the intended audience are from testing and UX the follow up material is more aligned towards that.</p>

<ul>
<li><p>In case you would like to have a deeper understanding on the MVVM pattern, and how it helps us, the below links should be useful</p>

<ul>
<li><p><a href="http://msdn.microsoft.com/en-us/magazine/dn463790.aspx">Writing a Testable Presentation Layer with MVVM</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/TechDays/Techdays-2014-the-Netherlands/Using-MVVM-So-You-Can-Write-Better-Code-and-Less-Code">Using MVVM So You Can Write Better Code and Less Code</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/MIX/MIX11/OPN03">Deep Dive MVVM</a></p></li>
</ul>
</li>
<li><p>MVVM is also helpful in Unit Testing improving the overall maintainability of the code too.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2012/3-017">Unit Testing Windows Store Apps</a></li>
</ul>
</li>
<li><p>Check out how you can create automated tests and also on the Coded UI support</p>

<ul>
<li><p><a href="http://channel9.msdn.com/events/TechEd/NorthAmerica/2014/DEV-B347#fbid=">Automated Testing of XAML-Based Windows Phone Applications</a></p></li>
<li><p><a href="http://channel9.msdn.com/events/Build/2013/3-323">Automated Testing of XAML-Based Windows Store Apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2014/04/05/using-coded-ui-to-test-xaml-based-windows-phone-apps.aspx">Using Coded UI to test XAML-based Windows Phone apps</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/cdndevs/archive/2014/05/05/save-time-money-and-your-sanity-coded-ui-testing-for-the-windows-phone-part-1.aspx">Save Time, Money, and Your Sanity: Coded UI Testing for the Windows Phone</a></p></li>
<li><p><a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/using-coded-ui-to-test-xaml-based-windows-store-apps.aspx">Using Coded UI to test XAML-based Windows Store apps</a></p></li>
</ul>
</li>
<li><p>Look into the tools and ways to analyze and improve performance</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/MIX/MIX11/DVC01">Analyzing and Improving Windows Phone Application Performance</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/3-578">Diagnosing Issues in Windows Phone XAML Apps Using Visual Studio</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/4-557">How to Analyze Performance Issues in Your Windows and Windows Phone Apps</a></p></li>
</ul>
</li>
<li><p>See how app crashes information can be tracked from a deployed app and how it can used and inferred upon to fix  issues. This is very important so that you can improve on the app reliability and performance for further updates.</p>

<ul>
<li><a href="http://channel9.msdn.com/Events/Build/2014/3-657">Avoiding Windows Store App Failures</a></li>
</ul>
</li>
<li><p>Learn about the security features and how it is important</p>

<ul>
<li><p><a href="http://channel9.msdn.com/Events/Build/2014/2-531">New Security Features for Windows Phone</a></p></li>
<li><p><a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/WIN-B357#fbid=">Windows Phone 8.1 Security and Management: The Right Choice for the Enterprise!</a></p></li>
</ul>
</li>
</ul>


<p>Stay in touch. You can find the presentation slides <a href="https://github.com/rahulpnath/Speaking/tree/master/Windows%20Phone%20And%20Store%20Apps">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Azure Web Sites: Moving Wordpress to Cloud]]></title>
    <link href="http://rahulpnath.com/blog/azure-web-sites-moving-wordpress-to-cloud/"/>
    <updated>2014-05-26T21:16:09+05:30</updated>
    <id>http://rahulpnath.com/blog/azure-web-sites-moving-wordpress-to-cloud</id>
    <content type="html"><![CDATA[<p>It’s been almost an year since I have moved to this custom hosted blog and is nearing its renewal with my current host, Godaddy. Now that Azure has full support for Web Sites which enables you to deploy web applications on a scalable and reliable cloud infrastructure and being a FTE(Full Time Employee), I have the privilege of a free <a href="http://azure.microsoft.com/en-us/pricing/member-offers/msdn-benefits-b/">msdn account that offers 150$ free credit on azure</a>, I have decided on to move to Azure for my blog. You could also try this with <a href="http://azure.microsoft.com/en-us/pricing/free-trial/">a free Azure trial that offers you 200$ credit for all the services</a></p>

<p><strong>Setting up Wordpress</strong> on Azure is very easy and is just a matter of few clicks from the <a href="https://manage.windowsazure.com">Management Portal</a>. You can find the detailed steps to get this done <a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-php-web-site-gallery/">here</a>. By default Azure Web Sites are installed in the root directory of IIS. To move this into a sub-folder of your choice, you can use any FTP client(FileZilla). The connection details can be obtained from the Management Portal as shown in the below screen shot.</p>

<p><img src="http://rahulpnath.com/images/PortalQuickglance.jpg" alt="Portal Quick glance" /> <img src="http://rahulpnath.com/images/PortalQuickglance1.jpg" alt="Portal Quick glance 1" /></p>

<p><strong>Mapping your custom domain </strong>to the new wordpress site is about adding a <a href="http://azure.microsoft.com/en-us/documentation/articles/web-sites-custom-domain-name/">CName record for awverify or www</a> in your Domain dashboard provided by the domain registrar. Once you have the required CName entries you can map the custom domain in the portal using the ‘Manage Domains’ option.</p>

<p><img src="http://rahulpnath.com/images/CustomDomain.jpg" alt="Custom Domain" /></p>

<p><strong>Restoring your content </strong>from my current host was easy as I am using <a href="http://vaultpress.com">Vaultpress</a> for my site backup and it provides an option to <a href="http://help.vaultpress.com/restore-to-a-new-site/">backup to a different web site too</a>. If not you could also use <a href="http://www.davebost.com/2013/07/11/moving-a-wordpress-blog-to-windows-azure-transferring-your-content">FTP to move your current site content which is detailed out here</a>. Once the content is restored you would need to update the Wordpress Url and Site address url in the General Settings of your blog dashboard. You could also update this directly on the MySQL database in the <em>wp_options</em> table(<em>home</em> and <em>siteurl</em> property). To connect to the database you would get the connection string details from the portal and you can use <a href="http://www.mysql.com/products/workbench/">MySQL Workbench</a> to connect to it. You might have to recheck your permalink setting on the Wordpress dashboard to ensure that it is the same as you were using earlier.</p>

<p><img src="http://rahulpnath.com/images/AzureGeneralSettings.jpg" alt="General Settings" /></p>

<p>Now you are up an running your blog on Azure!!</p>

<p><strong>Things to look out for:</strong></p>

<p><strong>1</strong>. Make sure that all your blog links use your custom domain and not <yourdomain>.azurewebsite.net.</p>

<p><strong>2</strong>. I had my Jetpack commenting system broken as I had moved the blog to a subdirectory. To correct this you would need to disconnect jetpack from the wordpress account and reconnect it. You can do this from the Wordpress dashboard. If reconnecting throws some error, then connect to your SQL database and delete of the entries that starts with jetpack in the <em>wp_options</em> table.(Make sure you have a db backup before you do this). Reconnecting after that should work fine</p>

<p><strong>3. </strong>If you see any error indicating there is a Redirect loop error, this is mostly because you would be redirecting a no-www request to the www sub domain. In this case make sure that the siteurl and home property in wp_options table also has www in the urls. Otherwise it will keep redirecting itself between no-www and www creating a redirect loop.</p>

<p><strong>Edit:
4. </strong>If you face any error while trying to connect to the azure hosted web site from <a href="http://www.microsoft.com/en-in/download/details.aspx?id=8621">Windows Live Writer</a>(WLW), this most likely is because it uses <a href="http://codex.wordpress.org/XML-RPC_Support">xmlrpc.php</a> for publishing posts to the site and this is accessed over the https enpoint. Since https is not setup for the custom domain, accessing xmlrpc.php over https would present you with the below certificate error.</p>

<p><img src="http://rahulpnath.com/images/wlw_https_error.jpg" alt="Https error" /></p>

<p>You could either configure your ssl bindings in azure portal, under the <a href="http://ruslany.net/2013/07/how-to-setup-ip-ssl-on-windows-azure-web-sites/">Configure tab under your website</a>. SSL bindings to custom domains can only be used in Basic or Standard mode. If yours is not in basic or standard mode as mine, you can workaround this by either configuring the blog in WLW using your *.azurewebsites.net url.</p>

<p><strong>Azure Plans &amp; Pricing</strong></p>

<p>If you do not have a free account, you might be thinking of the costs that would be really incurred for you to move on to Azure. In short Azure Web Sites is offered in four tiers: <strong>Free</strong>, <strong>Shared (Preview)</strong>, <strong>Basic</strong> and <strong>Standard</strong>. The pricing details for each of these is available in detail <a href="http://azure.microsoft.com/en-us/pricing/details/web-sites/">here</a>. To have a custom domain name mapping you would at least need to choose Shared mode. For more information on how to choose the right plan for you, Scott Hanselman has a very good article on <a href="http://www.hanselman.com/blog/PennyPinchingInTheCloudWhenDoAzureWebsitesMakeSense.aspx">Penny Pinching in the cloud.</a></p>

<p>Do you plan to move to Azure Web Sites some time soon?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series: Image Caching Library - JetImageLoader]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-image-caching-library-jetimageloader/"/>
    <updated>2014-04-18T05:26:17+05:30</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-image-caching-library-jetimageloader</id>
    <content type="html"><![CDATA[<p>Recently on a client project, I had a requirement to cache images locally on the phone and then load it from there from subsequent requests. Initially I had plans for custom implementing this using sqlite and custom code. While googling for this, I came across an awesome custom library that solved my problem with just a few lines of code – <a href="https://github.com/artem-zinnatullin/jet-image-loader">JetImageLoader</a> by <a href="https://github.com/artem-zinnatullin">Artem</a>. This is available via nuget, making it easy to install</p>

<p><a href="http://www.nuget.org/packages/WP-JetImagLoader/0.8.5"><img src="http://rahulpnath.com/images/WP-JetImagLoader.png" alt="WP-JetImagLoader" /></a></p>

<p>Integrating this library into any existing project is even easier and is just about using a converter on your Image datatemplate as shown below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Image</span> <span class="na">Source=</span><span class="s">&quot;{Binding UserAvatarUrl, Converter={StaticResource JetImageLoaderConverter}}&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You would need to add a custom converter and add this as part of the resource. There is a sample for this on Github where the <a href="https://github.com/artem-zinnatullin/jet-image-loader">project source</a> also lives.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">JetImageLoaderImplementation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">readonly</span> <span class="n">BaseMemoryCache</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span><span class="n">stream</span><span class="p">&gt;</span> <span class="n">MemoryCacheImpl</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WeakMemoryCache</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span><span class="n">stream</span><span class="p">&gt;();</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">readonly</span> <span class="n">BaseStorageCache</span> <span class="n">StorageCacheImpl</span> <span class="p">=</span> <span class="k">new</span> <span class="n">LimitedStorageCache</span><span class="p">(</span><span class="n">IsolatedStorageFile</span><span class="p">.</span><span class="n">GetUserStoreForApplication</span><span class="p">(),</span> <span class="s">&quot;\\image_cache&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="n">SHA1CacheFileNameGenerator</span><span class="p">(),</span> <span class="m">1024</span> <span class="p">*</span> <span class="m">1024</span> <span class="p">*</span> <span class="m">10</span><span class="p">);&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">JetImageLoaderConfig</span> <span class="nf">GetJetImageLoaderConfig</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">JetImageLoaderConfig</span><span class="p">.</span><span class="n">Builder</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">IsLogEnabled</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span><span class='line'>            <span class="n">CacheMode</span> <span class="p">=</span> <span class="n">CacheMode</span><span class="p">.</span><span class="n">MemoryAndStorageCache</span><span class="p">,</span>
</span><span class='line'>            <span class="n">DownloaderImpl</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HttpWebRequestDownloader</span><span class="p">(),</span>
</span><span class='line'>            <span class="n">MemoryCacheImpl</span> <span class="p">=</span> <span class="n">MemoryCacheImpl</span><span class="p">,</span>
</span><span class='line'>            <span class="n">StorageCacheImpl</span> <span class="p">=</span> <span class="n">StorageCacheImpl</span>
</span><span class='line'>        <span class="p">}.</span><span class="n">Build</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">JetImageLoaderConverter</span> <span class="p">:</span> <span class="n">BaseJetImageLoaderConverter</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="n">JetImageLoaderConfig</span> <span class="nf">GetJetImageLoaderConfig</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">JetImageLoaderImplementation</span><span class="p">.</span><span class="n">GetJetImageLoaderConfig</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">override</span> <span class="kt">object</span> <span class="nf">Convert</span><span class="p">(</span><span class="kt">object</span> <span class="k">value</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Type</span> <span class="n">targetType</span><span class="p">,</span> <span class="kt">object</span> <span class="n">parameter</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Globalization</span><span class="p">.</span><span class="n">CultureInfo</span> <span class="n">culture</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">base</span><span class="p">.</span><span class="n">Convert</span><span class="p">(</span><span class="k">value</span><span class="p">,</span> <span class="n">targetType</span><span class="p">,</span> <span class="n">parameter</span><span class="p">,</span> <span class="n">culture</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is all you need to do to have all the images that are bound with the converter to be cached locally on to the Memory and storage. You could also choose to cache it to only memory or storage. Do check this out in case you want to have images cached locally.</p>

<p>The nuget is for Windows 8 library, but there is also a version for <a href="https://github.com/artem-zinnatullin/jet-image-loader/tree/master/JetImageLoader.Wp7">WP7.1 avaialble on Github</a> (which apparently is a pull request from me, indeed my very first on Github that got merged)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Review: Two Months and Counting - Android and Nexus 5]]></title>
    <link href="http://rahulpnath.com/blog/review-two-months-and-counting-android-and-nexus-5/"/>
    <updated>2014-03-10T21:38:29+05:30</updated>
    <id>http://rahulpnath.com/blog/review-two-months-and-counting-android-and-nexus-5</id>
    <content type="html"><![CDATA[<p>Gadgets, especially mobile phones have always been of interest to me and so is it even today. Its been over two months since I have moved over to Android on Nexus 5. I have been a loyal, hardcore Windows phone fan for over 3 years before that and it did take time to get used to the new operating system. There are still things that I like about Windows phone but there are things that I don’t like too, so I though of giving Android a try. <a href="https://www.google.com/nexus/5/">Nexus 5</a> is one powerful device that is worth every penny for its power packed features and there is no reason not to like it. The <a href="http://www.androidpolice.com/2013/10/20/weekend-poll-nexus-5-white-or-black/">White vs Black</a> confusion was there but then I got the White one, as that was the only thing in stock, and after all with a protective cover on, it didn’t matter much.</p>

<p><strong>Things that I love:</strong></p>

<ul>
<li><p><strong>Notification</strong> : The one stop place for all notifications is one of the best things that I like moving to Android from Windows phone. A <a href="http://i.msdn.microsoft.com/dynimg/IC619123.png">missed toast</a> is always missed until I next decide to open that app in Windows phone or maybe a lock screen notification. But now it is right there on the notification center. (though I have many notifications turned off as part of <a href="http://rahulpnath.com/blog/staying-organized-finding-a-system-to-manage-it-all/">Staying Organized</a>)</p></li>
<li><p><strong>Toggle Settings : <a href="https://play.google.com/store/apps/details?id=com.painless.pc">Toggling settings</a></strong> like Wi-Fi, Bluetooth, 3G etc is also top on my likes. There is at least 2 steps required for toggling these settings in Windows phone</p></li>
<li><p><strong>Google Now : </strong>I have been googling around for a lot of years and like the way Google Now updates on searches that I have done. Yes I know that we have a privacy problem here, but I have decided to stay on the internet – everything gets tracked here. The <strong>speech recognition</strong> of Google is as best it can get today, best thing being it understands my accent (Indian) pretty much all the time.</p></li>
<li><p><strong>Apps: </strong>I have never been a fan of apps and I rarely used them. Windows phone did have all the major apps, but most of them lacked all the features because of which I had to switch to the web app at times. This in fact made me use the web app always. But Android apps mostly has all the features which makes me use them more. Some of the apps that I use regularly are :</p>

<ul>
<li><p><a href="https://play.google.com/store/apps/details?id=ch.bitspin.timely">Timely</a> : An awesome alarm clock with the cool Smart Rise feature</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.google.android.gm">Gmail</a> : With all the features of the web app</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.skype.raider">Skype</a>, <a href="https://play.google.com/store/apps/details?id=com.microsoft.office.lync15">Lync</a>, <a href="https://play.google.com/store/apps/details?id=com.whatsapp">Whatsapp</a>, <a href="https://play.google.com/store/apps/details?id=com.facebook.katana">Facebook</a>, <a href="https://play.google.com/store/apps/details?id=com.twitter.android">Twitter</a>: Helps me keep connected with my friends, peers and customers</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.google.android.apps.giant">Google Analytics</a> and <a href="https://play.google.com/store/apps/details?id=org.wordpress.android">Wordpress</a> – For keeping track of my blog</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2">Authenticator</a> – for all two-step verification codes</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.microsoft.skydrive">Onedrive</a>, <a href="https://play.google.com/store/apps/details?id=com.dropbox.android">Dropbox</a>, <a href="https://play.google.com/store/apps/details?id=com.github.mobile">GitHub</a> – For managing my cloud storage. GitHub has a lot more to improve on features.</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.stitcher.app">Stitcher</a>, <a href="https://play.google.com/store/apps/details?id=com.devhd.feedly">Feedly</a>, <a href="https://play.google.com/store/apps/details?id=mobi.beyondpod">BeyondPod</a> – For feeds and podcasts</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.microsoft.office.onenote">OneNote</a> and the native email app - For tracking notes, <a href="http://rahulpnath.com/blog/staying-organized-finding-a-system-to-manage-it-all/">tasks and exchange emails</a>. The native email application has a lot of scope for improvement</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.alienmanfc6.wheresmyandroid">Where&rsquo;s My Droid</a> - Finding a lost phone equivalent on Windows Phone.</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=com.amazon.kindle">Kindle</a> and <a href="https://play.google.com/store/apps/details?id=com.overdrive.mobile.android.mediaconsole">Overdrive</a> - For my kindle books and audio books</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=net.nurik.roman.dashclock">DashClock Widget</a> - For lock screen notifications</p></li>
<li><p><a href="https://play.google.com/store/apps/details?id=ro.weednet.contactssync">UberSync</a> – To sync facebook contacts and profile pictures to a contact. This is something that is really good in windows phone. Ability to link all social accounts of a person/contact.</p></li>
</ul>
</li>
<li><p><strong>Customization: </strong>The level of customization and control that each application gives is enormous that almost everything is configurable. You can mute/turn off notifications on annoying text promotion messages, different color notifications, auto update settings and a lot more.</p></li>
<li><p><strong>Chrome: </strong>This definitely is one another on my top likes. I have been using chrome for a long time and absolutely love the experience even on android. The password sync across devices is cool and so is <a href="https://support.google.com/chrome/answer/2591582?hl=en">Sync tabs across devices</a>. Bookmarks sync and support for <a href="https://play.google.com/store/apps/details?id=com.delicious">Delicious</a> is also good. IE definitely has a long way to go there. The <a href="https://developers.google.com/chrome-developer-tools/docs/remote-debugging">developer support</a> for chrome on android is also worth mentioning.</p></li>
</ul>


<p><strong>Things that I don’t like and miss:</strong></p>

<ul>
<li><p><strong>Jumplist: <a href="http://rahulpnath.com/blog/windows-phone-series-jump-lists/">Jumplists</a></strong> really made navigating through large lists a lot easier on Windows phone. Now I always need to hit the search button and type.</p></li>
<li><p><strong>People Hub: </strong>This was one of the best things of Windows phone, having the ability to <a href="http://www.windowsphone.com/en-us/how-to/wp7/people/people-hub?signin=true">link all your social networks</a> into one and have a quick access of all updates.</p></li>
<li><p><strong>Nokia Music and Drive: </strong>In fact all the Nokia suite apps were really good and especially these two.</p></li>
</ul>


<p>The lists itself explains much of it – <strong>I am liking it a lot. </strong>The android experience on a Nexus device is fast and smooth.</p>

<p><strong>Cases and Covers:</strong></p>

<p>I have been alternating between 2 cases for my Nexus 5 from Spigen and liking them both especially the Neo Hybrid. The white shows of through its transparent back and the overall grip on the phone is very good and comfortable.</p>

<ul>
<li><p><a href="http://www.amazon.in/gp/product/B00HYA10LC/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=B00HYA10LC&amp;linkCode=as2&amp;tag=rahulpnath-21">Spigen Google Nexus 5 Case ULTRA HYBRID</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=B00HYA10LC" alt="" /></p></li>
<li><p><a href="http://www.amazon.in/gp/product/B00EV8Y6QQ/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=B00EV8Y6QQ&amp;linkCode=as2&amp;tag=rahulpnath-21">Spigen Google Nexus 5 Case Protective Neo Hybrid</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=B00EV8Y6QQ" alt="" /></p></li>
</ul>


<p>The <strong>battery</strong> backup on the device is pretty good and is lasting for me through a day. I have not yet been on any trips with the phone, so can’t comment on the battery in such situations where generally it lasts lesser. But <a href="http://www.ibtimes.com/google-working-nexus-5-battery-drain-fix-affects-all-android-devices-kitkat-qualcomm-chips-1559771">Google has also announced</a> on a battery leak issue for which a fix would be out soon. Hope that would improve it further. I have never been a fan of phone <strong>camera, </strong>since <a href="http://rahulpnath.com/blog/photography-learning-to-click/">I prefer my DSLR</a> for that, but even then for a camera it is pretty decent with lots of options and filters. At times it does come handy and works perfect.</p>

<p>If you are planning to get a new phone and then this is worth considering. If you are already using one then do let know on what you feel about the phone?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series: Bing Maps and Turn-by-Turn Navigation]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-bing-maps-and-turn-by-turn-navigation/"/>
    <updated>2014-03-08T05:10:39+05:30</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-bing-maps-and-turn-by-turn-navigation</id>
    <content type="html"><![CDATA[<p>Many applications today provide features that integrate with users location and provide information on a map based on that. In this blog will see how we can use the Bing maps to show a users current location, search for destination and show route to that location. For this will use Bing maps, and you would have to create an account here and create a key that we would be using. Make sure that you read on the <a href="http://www.microsoft.com/maps/product/terms.html">licensing terms</a> on the api if you are planning to use this in a published application.</p>

<p>To use Maps in windows phone application, you would need to add a reference to ‘<em>Microsoft.Phone.Controls.Maps</em>’ once you create a new Windows phone project. Add the maps control to the application as below to display current location or other map related features.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;maps:Map</span> <span class="na">Grid.Row=</span><span class="s">&quot;1&quot;</span> <span class="na">Name=</span><span class="s">&quot;mapBing&quot;</span>  <span class="na">AnimationLevel=</span><span class="s">&quot;None&quot;</span> <span class="na">VerticalAlignment=</span><span class="s">&quot;Stretch&quot;</span> <span class="na">VerticalContentAlignment=</span><span class="s">&quot;Stretch&quot;</span>
</span><span class='line'>          <span class="na">CopyrightVisibility=</span><span class="s">&quot;Collapsed&quot;</span>  <span class="na">LogoVisibility=</span><span class="s">&quot;Collapsed&quot;</span>
</span><span class='line'>          <span class="na">ZoomBarVisibility=</span><span class="s">&quot;Collapsed&quot;</span>
</span><span class='line'>          <span class="na">ZoomLevel=</span><span class="s">&quot;12&quot;</span> <span class="na">CredentialsProvider=</span><span class="s">&quot;BING MAPS API KEY&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;maps:MapLayer</span> <span class="na">Name=</span><span class="s">&quot;RouteLayer&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;maps:MapLayer</span> <span class="na">Name=</span><span class="s">&quot;StartPoint&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;maps:MapLayer</span> <span class="na">Name=</span><span class="s">&quot;DestinationPoint&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;maps:MapLayer</span> <span class="na">Name=</span><span class="s">&quot;CurrentPosition&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;maps:MapLayer</span> <span class="na">Name=</span><span class="s">&quot;MyPathLayer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/maps:MapLayer&gt;</span>
</span><span class='line'><span class="nt">&lt;/maps:Map&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This adds a map user control to the application and also different layers to the application, on which we would be displaying the pins, routes etc. Anything that gets shown on the map is shown on different layers. Each of these can be cleared, deleted or toggled for visibility making it easy to work on maps.</p>

<p><strong>Track Me</strong></p>

<p>The  first thing that we would want is to track our location, so that we could provide information related to our current location. For this we use the <a href="http://msdn.microsoft.com/en-us/library/system.device.location.geocoordinatewatcher(v=vs.110">GeoCoordinateWatcher</a>.aspx), that provides the location information based in latitude and longitude. Registering for the PositionChanged event will update us whenver the location information related to the user has changed, so that we can update/obtain the real time location of the user if he is on the move. Once we have the user location co-ordinates, we can use the <a href="http://msdn.microsoft.com/en-us/library/ff701715.aspx">Location API</a>, to get the location name.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">GeoPosition</span> <span class="n">myPosition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">TrackMe</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">startingPoint</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CurrentPosition</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">myWatcher</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">myWatcher</span><span class="p">.</span><span class="n">PositionChanged</span> <span class="p">-=</span> <span class="n">myWatcher_PositionChanged</span><span class="p">;</span>
</span><span class='line'>        <span class="n">myWatcher</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span><span class='line'>        <span class="n">myWatcher</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">myWatcher</span> <span class="p">=</span> <span class="k">new</span> <span class="n">GeoCoordinateWatcher</span><span class="p">();</span>
</span><span class='line'>    <span class="n">myWatcher</span><span class="p">.</span><span class="n">TryStart</span><span class="p">(</span><span class="k">false</span><span class="p">,</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="n">FromMilliseconds</span><span class="p">(</span><span class="m">1000</span><span class="p">));</span>
</span><span class='line'>    <span class="n">myWatcher</span><span class="p">.</span><span class="n">PositionChanged</span> <span class="p">+=</span> <span class="n">myWatcher_PositionChanged</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">void</span> <span class="nf">myWatcher_PositionChanged</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">GeoPositionChangedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="n">myPosition</span> <span class="p">=</span> <span class="n">myWatcher</span><span class="p">.</span><span class="n">Position</span><span class="p">;</span>
</span><span class='line'>     <span class="n">currentLocation</span> <span class="p">=</span> <span class="n">myWatcher</span><span class="p">.</span><span class="n">Position</span><span class="p">.</span><span class="n">Location</span><span class="p">;</span>
</span><span class='line'>     <span class="k">if</span> <span class="p">(</span><span class="n">isInDriveMode</span><span class="p">)</span>
</span><span class='line'>     <span class="p">{</span>
</span><span class='line'>         <span class="n">DrawMyCurrentRoute</span><span class="p">(</span><span class="n">currentLocation</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">LocationManager</span><span class="p">.</span><span class="n">GetLocationName</span><span class="p">(</span><span class="n">UpdateLocation</span><span class="p">,</span> <span class="n">myPosition</span><span class="p">.</span><span class="n">Location</span><span class="p">.</span><span class="n">Latitude</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="n">myPosition</span><span class="p">.</span><span class="n">Location</span><span class="p">.</span><span class="n">Longitude</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Destination and Routes</strong></p>

<p>Location points are depicted on maps using the Pushpin user control. Now that we have the users location, we need to get the destination where the user wants to go. We have added a simple panorama control where in one of them has a map and the other has the details to enter the destination location. Once the user enters the destination location name, we need to get the co-ordinates of this location. For this we use the Location API again but with a different endpoint. We might get multiple responses for the same location name, for which we add destination pushpins to the map, so that user can select the correct location from the map that he intends to go. On getting confirmation on the destination point, we now need to get the route from the current location to the destination location. A route is nothing but a set of co-ordinates between the start and the destination that the user will have to pass through to reach the final destination. You can use the <a href="http://msdn.microsoft.com/en-us/library/ff701705.aspx">Routes API</a> or consume it adding a service reference to <a href="http://dev.virtualearth.net/webservices/v1/routeservice/routeservice.svc/mex">http://dev.virtualearth.net/webservices/v1/routeservice/routeservice.svc/mex</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">RouteServiceClient</span> <span class="n">routeService</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RouteServiceClient</span><span class="p">(</span><span class="s">&quot;BasicHttpBinding_IRouteService&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">routeService</span><span class="p">.</span><span class="n">CalculateRouteCompleted</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">DrawRoute</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">mapBing</span><span class="p">.</span><span class="n">SetView</span><span class="p">(</span><span class="n">LocationRect</span><span class="p">.</span><span class="n">CreateLocationRect</span><span class="p">(</span><span class="n">locations</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="n">routeService</span><span class="p">.</span><span class="n">CalculateRouteAsync</span><span class="p">(</span><span class="k">new</span> <span class="n">RouteRequest</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Credentials</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Credentials</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ApplicationId</span> <span class="p">=</span> <span class="n">LocationManager</span><span class="p">.</span><span class="n">bingApiKey</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">Options</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RouteOptions</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">RoutePathType</span> <span class="p">=</span> <span class="n">RoutePathType</span><span class="p">.</span><span class="n">Points</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">Waypoints</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ObservableCollection</span><span class="p">(</span>
</span><span class='line'>        <span class="n">locations</span><span class="p">.</span><span class="n">Select</span><span class="p">(</span><span class="n">x</span> <span class="p">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">new</span> <span class="n">Waypoint</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">Location</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Phone</span><span class="p">.</span><span class="n">Controls</span><span class="p">.</span><span class="n">Maps</span><span class="p">.</span><span class="n">Platform</span><span class="p">.</span><span class="n">Location</span><span class="p">()</span> <span class="p">{</span> <span class="n">Latitude</span> <span class="p">=</span> <span class="n">x</span><span class="p">.</span><span class="n">Latitude</span><span class="p">,</span> <span class="n">Longitude</span> <span class="p">=</span> <span class="n">x</span><span class="p">.</span><span class="n">Longitude</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">}))</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The Draw route draws a route line on the RouteLayer on the map, so that the user can see the path that he needs to take to reach his final destination. As the user starts moving the routes are recalcualted and redrawn on the map, so that there is a constant feedback to the user on the path that he is taking. Along with the routes we also get a text direction information that describes the direction in which we need to travel. This can be spoken out to the user so that he need not always look at the mobile to find the next immediate action that he needs to perform. Here I have used the Google translate api</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">speechUrl</span> <span class="p">=</span> <span class="s">&quot;http://translate.google.com/translate_tts?tl=en&amp;amp;q=&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">SpeakText</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Play the audio</span>
</span><span class='line'>    <span class="n">med1</span><span class="p">.</span><span class="n">Source</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">speechUrl</span> <span class="p">+</span> <span class="n">message</span><span class="p">);</span>
</span><span class='line'>    <span class="n">med1</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You could add on more features to this using the different location related api’s that are available and provide the user a more enhanced experience.</p>

<p><img src="http://rahulpnath.com/images/Bing_wp_route.png" alt="Bing_wp_route" /><img src="http://rahulpnath.com/images/Bing_wp_place_search.png" alt="Bing_wp_place_search" /><img src="http://rahulpnath.com/images/Bing_wp_directions_text.png" alt="Bing_wp_directions_text" /></p>

<p><strong>Testing</strong></p>

<p>Using the <a href="http://msdn.microsoft.com/en-us/library/windowsphone/develop/hh202933(v=vs.105">additional tools along with the phone emulator</a>.aspx), you can simulate location changes and also be at any location without actually being there and test. The emulator also provides a lot of functionality to simulate movement along a specific route and fire location changes in fixed amount of time etc, that come handy while testing.
<img src="http://rahulpnath.com/images/Bing_wp_simulator_geolocation.png" alt="Bing_wp_simulator_geolocation" /></p>

<p>You could also install it on to a phone and dash out to test it for yourself in your real-time location and reach the coffee-shop faster!. Find the sample code <a href="https://github.com/rahulpnath/Blog/tree/master/SimpleGPS">here</a> and feel free to use it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With PhoneGap: Developing for Windows Phone and Android]]></title>
    <link href="http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android/"/>
    <updated>2014-03-04T21:36:40+05:30</updated>
    <id>http://rahulpnath.com/blog/getting-started-with-phonegap-developing-for-windows-phone-and-android</id>
    <content type="html"><![CDATA[<p>With lots of devices and operating systems out there, developing a native application for each of these platforms might not always be an option for many businesses, because of the time, effort and money that would be required to be on all platforms. <a href="http://phonegap.com/">PhoneGap</a> is one option that could be explored in this case, which helps to develop hybrid applications that can exists on a <a href="http://phonegap.com/about/feature/">variety of platforms</a> integrating with platform specific features. <a href="http://cordova.apache.org/">Apache Cordova</a> is what powers PhoneGap and is free and open source under the <a href="http://phonegap.com/about/license/">Apache License, Version 2.0</a>.</p>

<p>Setting up PhoneGap is pretty easy and direct with its integration with <a href="http://nodejs.org/">node.js</a>. Lets take a look on how to setup our project from scratch.</p>

<ol>
<li><p>Install <a href="http://nodejs.org/">node.js</a></p></li>
<li><p>Install PhoneGap using node.js</p>

<p> <strong><em>npm install –g phonegap</em></strong></p>

<p> npm is the official node package manager</p>

<p> -g installs the package in global scope.If you face any error while installing the package(since I happened to, I guess because I closed the console while it was installing the first time) you can try following the below steps, which helped me solve it.</p>

<p> <strong>            npm list –g</strong></p>

<p> If the above step shows that there is a <em>unmet dependency phonegap</em>, then you could follow the below steps</p>

<p> <strong>            npm rm phonegap</strong></p>

<p> <strong>            npm cache clear</strong></p>

<p> Try installing PhoneGap again using <em>npm install –g phonegap</em></p></li>
<li><p>Install Cordova
<strong>npm install –g cordova</strong></p></li>
<li><p>Now we have everything setup for PhoneGap project. Lets create the project. Navigate to your project root folder and create a project.</p>

<p> <strong>phonegap create <appname></strong></p>

<p> This will create the basic folder structure for your PhoneGap project which looks like below.</p>

<p> <img class="left" src="http://rahulpnath.com/images/cordova_folder_structure.png" alt="cordova_folder_structure" /></p>

<p> <strong>.cordova: </strong>This directory contains files related to cordova.</p>

<p> <strong>merges: </strong>This directory contains platform specific assets. A sub-directory for each platform is created inside here, whenever  a new platform is created. This sub-directory mirrors the structure of the <em>www </em>directory, which allows to add platform specific files to appropriate folders.</p>

<p> <strong>platforms: </strong>This directory contains native code for each of the <a href="http://docs.phonegap.com/en/edge/guide_platforms_index.md.html">supported platforms</a>. By default this is empty and we need to add the required platforms, which we will see later.</p>

<p> <strong>plugins: </strong>This directory contains the <a href="https://build.phonegap.com/plugins">plugins</a> that provide extra support to interface with each of the native platforms.</p>

<p> <strong>www: </strong>This directory contains the primary files that is required for your project/application. This gets copied into each of the platform specific projects in <em>platforms </em>folder whenever a build is performed. So this is where your core development would happen and all your cross-platform code would live in.</p></li>
<li><p>Lets now create a native project, for windows phone.</p>

<p> <strong>cordova platform add wp8</strong></p>

<p> This will add a wp8 folder inside <em>platforms </em>and also <em>merges. </em>The one in platforms will have the native project setup with all the files in <em>www</em> folder copied into it. You can open up the sln file in Visual Studio and build and run. We have the application up and running on our first platform!
 Lets add in some code so that it makes sense as an application. We will stick on with our usual 500px api and show off some beautiful pictures. I have added jquery from nuget in Visual studio and also updated the files to show pictures from 500px, which I would not be explaining here as it is just some html/js/css..(Updated files in www folder can later be copied into the root <em>www </em>folder later. Need to figure out the correct way on how to go about this. In case you know how, please do leave a comment. Would be more than happy to learn.)</p></li>
<li><p>Once we copy out the updated files in platform specific <em>www </em>folder into root www folder we can go ahead and add android platform.</p>

<p> <strong>cordova platform add android</strong></p>

<p> This creates an android folder inside <em>platforms</em> and <em>merges</em> folder. You can open up the project in your IDE(<a href="https://www.eclipse.org/downloads/">Eclipse</a>, <a href="http://www.jetbrains.com/idea/">IntelliJ</a> or <a href="http://developer.android.com/sdk/installing/studio.html">Android Studio</a> etc) for android, build and run. We have the application up and running also on the second platform!
 For android you would need to make sure the config files are updated with the required permissions for accessing internet and also to enable <a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CORS</a>. By default internet permissions are enabled, you would only have to update the config for cors(<em>origin header</em>) as it defaults to ‘<em>127.0.0.1*</em>’. I have updated this to just ‘*’, inside <strong><em>res/xml/config.xml </em></strong>(since there is one config.xml inside assets/www folder too).If you are new to android platform, which I was then you can check out here on <a href="http://rahulpnath.com/blog/setting-up-the-development-environment-for-phonegap-on-android/">Setting up the development environment for phonegap on android</a>.
 At times I did have the Android emulator not moving past the &lsquo;<em>Connecting to Device</em>&rsquo; screen while running the application. I just killed all the emulators and started a fresh one from AVD (Android Virtual Device) Manager, unchecking &lsquo;launch from snapshot&rsquo; and &lsquo;save to snapshot&rsquo; options.</p></li>
</ol>


<p>With PhoneGap/Cordova, you can see how easy it is to have an app in various platforms of your choice. We have not seen on how to utilize any of the platform specific features of devices using PhoneGap, but I am sure that you should be able to figure out from here, now that you have all that you need up and running.</p>

<p><img src="http://rahulpnath.com/images/Cordova_WP.png" alt="Cordova_WP" />
<img src="http://rahulpnath.com/images/Cordova_Android.png" alt="Cordova_Android" /></p>

<p>The source code for the sample is available <a href="https://github.com/rahulpnath/Blog/tree/master/GettingStartedOnPhoneGap">here</a>. Don’t forget to update the <a href="http://developers.500px.com/">api key for 500px</a> before you run the application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up the Development Environment for PhoneGap on Android]]></title>
    <link href="http://rahulpnath.com/blog/setting-up-the-development-environment-for-phonegap-on-android/"/>
    <updated>2014-03-04T11:19:22+05:30</updated>
    <id>http://rahulpnath.com/blog/setting-up-the-development-environment-for-phonegap-on-android</id>
    <content type="html"><![CDATA[<p>I have been working on Microsoft stack for over a long time, in fact almost my entire career. Now that with all the platforms out there and cross platform being a very important factor in any application development, knowing about other platforms and developing for them is very important . Since I have had some prior experience on Java, I thought of ramping back on it so that I could also explore the Android operating system.</p>

<p>Setting up Java and choosing an <a href="http://en.wikipedia.org/wiki/Integrated_development_environment">IDE</a> was always confusing for me and so is it now. For .Net it was, is and always will be <a href="http://www.visualstudio.com/">Visual Studio</a> and the setup experience is seamless. For a person in the .net world moving into java would take some time in setting up the environment, and getting used to the IDE’s. Personally I feel that none of the java IDE’s matches the experience and features provided by Visual Studio - but that might be just me. But lets be happy with what we have and start setting up our development environment.</p>

<ul>
<li><p> <strong>Download</strong> the <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">Java SDK</a>. I have chosen to download the latest one as on writing this blog, as I did not have any reason not to. If you have a specific need to have a particular java version then you should get that. Install it into the appropriate location (e.g. <em>C:\Program Files\java\jdk1.7</em>)</p></li>
<li><p><strong>Set JAVA_HOME</strong> in the system environment variables.
Right Click on MyComputer –> Properties –>Advanced System Settings –> Environment Variables
Under System Variables, add a new variable by clicking New and entering <em>Variable Name </em>as JAVA_HOME and <em>Variable value</em> as the path to the root jdk folder installed in previous step.(<em>C:\Program Files\java\jdk1.7</em>). Save the changes.
To see if this has been saved you can verify by opening a command prompt and typing in <em>echo %JAVA_HOME%, </em>which should echo out the path set above.</p></li>
<li><p>Update <strong>PATH </strong>to include java path too, so that this can be executed from anywhere, without knowing the full path of the java compiler.
Under system variables there would already be a variable with name <em>path </em>(if not add it), to which you can append the java path. Java is in the bin folder under the root folder, so append “<em>;%JAVA_HOME%/bin;</em>” to the path variable. Save and close.
To check if this is successfully setup, open up command prompt and type in java. You should see usage information help for java.</p></li>
<li><p><strong>Installing ANT. </strong>Download <a href="http://ant.apache.org/">ant library</a> and copy/install into a suitable location. Ant is used in the build of java applications and is more comparable to msbuild in .net.</p></li>
<li><p>Set <strong>ANT_HOME </strong>and<strong> PATH </strong>like we set for Java. Should be easy for you now.</p></li>
<li><p>Download and install <a href="http://developer.android.com/sdk/index.html">Android SDK</a>.</p></li>
<li><p>Set <strong>ANDROID_HOME </strong>to the android sdk root folder.</p></li>
<li><p>Set <strong>PATH </strong>for android tools(<em>%ANDROID_HOME%\tools;</em>) and platform-tools<em>(%ANDROID_HOME%\platform-tools;</em>)</p></li>
<li><p><strong>Download an IDE</strong>. <a href="https://www.eclipse.org/downloads/">Eclipse</a>, <a href="http://www.jetbrains.com/idea/">IntelliJ Community Edition</a> , <a href="http://developer.android.com/sdk/installing/studio.html">Android Studio</a> are all freely available IDE’s that you can choose from. Android studio is based on IntelliJ IDEA. I chose to use IntelliJ for now for no specific reason.</p></li>
</ul>


<p>Now you are all setup for starting your development with PhoneGap on Android . Hope this helps you to quick start your development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Staying Organized: Finding a System to Manage It All]]></title>
    <link href="http://rahulpnath.com/blog/staying-organized-finding-a-system-to-manage-it-all/"/>
    <updated>2014-02-22T21:53:04+05:30</updated>
    <id>http://rahulpnath.com/blog/staying-organized-finding-a-system-to-manage-it-all</id>
    <content type="html"><![CDATA[<p>In our busy lives, with multiple roles to play at home and work, everyone needs to have some kind of system to keep things organized and stay on top - <strong><em>to have control</em>. </strong>I&rsquo;ve been always amazed on how my father stays organized with all the things with his to-do list paper calendar and the energy with which he gets things done. Apart from his not-so-optimized short trips on the two-wheeler(which he does because he enjoys it) in getting things done across the town, that is what I have always wanted to attain.</p>

<p>I have always tried the pen-paper method to keep track of things to get done, but somehow I could never keep up with it. I always lost track of it as most of my work is <strong>not <em>track able with paper</em></strong>. Most of my work is done using a computer and I thought something that best suites me would be some tool that is right in my computer. I have tried with a variety of tasks application and some of them are pretty good in how it organizes tasks. But again it yet did not integrate into my life that easily, as there was always an overhead of entering tasks.</p>

<blockquote><p>Contemplating over why all these systems itself was an overhead, one thing that I have realized that I was always trying to live two lives - <strong>personal and official</strong>, with these systems.</p></blockquote>

<p>Major part of my day is spend at office where work mostly comes over email. Keeping track of it on a different task list manager or paper is really an overhead. So mostly I ended my leaving my office tasks in my mails itself and only tried to manage my personal tasks on the tool. This is why I <em>was living two lives</em>. There were two systems of management(or even more as bugs are assigned in <a href="http://www.visualstudio.com/en-us/products/tfs-overview-vs.aspx">Visual Studio TFS</a>) which by itself made tasks management an overhead and unmanageable.</p>

<p>After a  lot of reading and researching around the common productivity tools and systems finally I reached back to what I have been using day in and day out – <strong><em>Outlook. </em></strong>Outlook is more than a mere mailbox management tool. It has a lot of features that is built into it which is seldom used and overlooked upon. One advantage with outlook is that it is available everywhere – desktop, web, tablet and phone.</p>

<p><img class="left" src="http://rahulpnath.com/images/Outlook_folders_productivity.png" alt="Outlook_folders_productivity" /></p>

<p>Most of us, even me used to just use flags on messages to indicate the messages that I had to take actions on. But this would soon turn out unmanageable, as it is hard to prioritize out from a single large list. Outlook has an important feature of <a href="http://office.microsoft.com/en-in/outlook-help/create-and-assign-color-categories-HA010217901.aspx">categorization</a> and also <a href="http://help.outlook.com/en-us/140/bb899478.aspx">folderization</a>. Either of this feature can be used to maximize the way in which we manage tasks.</p>

<p>I have chosen to use folders for the only reason that it is easier to sync folders on to my mobile, than categorized tasks, for which I would again need another application. As mentioned in the <a href="http://www.amazon.in/gp/product/0142000280/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=0142000280&amp;linkCode=as2&amp;tag=rahulpnath-21">Getting Things Done</a>, by David Allen I have created various folders to categorize the tasks that come in</p>

<p><strong>.NextActions:</strong>  This holds the immediate next actions that I need to do. I further set a <a href="http://office.microsoft.com/en-in/outlook-help/flag-an-item-for-follow-up-HA010355003.aspx">flag date</a> to further prioritize them within the list.
<strong>.WaitingFor: </strong>This holds the items that I am waiting for somebody else to reply or something that I have delegated to someone else for action.(This is probably a NextAction on some one else’s list)
<strong>.TalkTo: </strong>These are things that I need to talk to people in person or over phone.
<strong>.References: </strong>These are reference documents that would be useful.
<strong>@Future: </strong>This contains tasks that needs to be done in the future, which might be in the next week. This would soon go into the .NextActions.
<strong>@Blog: </strong>These contain activities I need to do maintain this blog</p>

<p>And many of such folders that makes sense to me. You should create folders that makes sense to you.So all my official and personal tasks are now managed in my mailbox. For any tasks that do not come over a mail, I send a mail to myself.</p>

<p><strong>Reaching Zero Inbox</strong></p>

<p>Having a <a href="http://inboxzero.com/">zero mail inbox</a> is a very important thing – but not at any given point of time. Mails definitely can wait some time, before you take action on them. Allocate time to check mails and try to follow it. Once you check mails allocate them into the various folders that you already have. If it is something that you can answer to in less than a few minutes then do that immediately than allocating them to a folder and then picking it up from there. For anything else allocate them to different folders and act upon them later as per their priority. Create calendar entries/reminders only if it is strictly time bound, which has to happen at a specific time or date, like birthdays, booking time etc.</p>

<p>Create meaningful <a href="http://office.microsoft.com/en-in/outlook-help/manage-email-messages-by-using-rules-HA010355682.aspx">mail rules</a> so that you get to see what is urgent/important first. You need not scan all mail rule folders at all times. Mails that directly are addressed to you, mostly would need your attention. So the first rule would be to have messages that are directly addressed to you, to come to your inbox. Messages that you are <em>cc’ed</em>  in are mostly for information and should go to a different folder(Inbox-cc). But there are high chances that people who send messages  to you might not take a good look on when replying to messages in which field you are in. I have seen this, where it was directly addressed to me in the subject, but was cc’ed. But at least make sure you do not make this mistake. Always check the to and cc fields before sending/replying to mail. All other mails that reached me because I am in certain distribution lists goes into specific folders, which I scan only once a day.</p>

<p>Create a mail scanning process for yourself, whatever works for you. But try to stick to it.</p>

<p><strong>Managing Attention</strong></p>

<p>The biggest thing for staying productive and organized is attention management than time management. Even if you have scheduled your time for tasks, if you don&rsquo;t have the attention required then there is no point in managing your time. It is easy to manage your attention. Find things that distracts you and try to avoid them. One of the main thing in today&rsquo;s world that distracts us the most is – <strong>push notifications</strong>. Turn them off.Yes your heard it right. Turn them off right now. There is nothing that important coming over those notifications that is more important than keeping your attention to what you want. Notifications should be only for phone calls if you feel them important, because I do. I keep my internet turned on, as I would still want to have emails, tweets or other updates to be still updated onto my phone when I need them.</p>

<blockquote><p><strong>Turn off  Push Notifications</strong>. This is really going to help you manage your attention.</p></blockquote>

<p>Try to forcefully keep your attention to the task at hand. You can try out <a href="http://pomodorotechnique.com/">The Pomodoro Technique</a>. There are many apps for the phone that will work as a timer for the technique. I use <a href="https://play.google.com/store/apps/details?id=net.phlam.android.clockworktomato&amp;hl=en">Clockwork Tomato</a> - Yes for some time I am on an android Nexus5.</p>

<p>Plan your day so that you have a goal to achieve everyday, that just reacting to mails and working on someone else’s priorities. Don’t start your checking mails in the morning immediately after getting up. Have fixed times for checking mails, but definitely not the first thing in the morning.It might be hard for couple of days but it is only a matter of getting used to. You will definitely see a difference once you start following it.</p>

<blockquote><p>Stop checking your mails the first thing in the morning immediately after getting up.</p></blockquote>

<p>Its not been long since I have started to follow this, but I felt interesting enough to share this if it helps someone who is also searching for tools and methodologies to keep yourself productive and manage your tasks and responsibilities. There are a lot of resources that has inspired into this process and would be wrong to not mention it here</p>

<p><strong>Resources:</strong></p>

<ul>
<li><p><a href="http://www.hanselman.com/blog/HanselminutesPodcast268PersonalSystemsOfOrganizationReyBangoInterviewsScottHanselman.aspx">Scott Hanselman is always an inspiration</a></p></li>
<li><p><a href="http://www.amazon.in/gp/product/0142000280/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=0142000280&amp;linkCode=as2&amp;tag=rahulpnath-21">Getting Things Done: The Art of Stress-Free Productivity</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=0142000280" alt="" /></p></li>
<li><p><a href="http://www.amazon.in/gp/product/1118179676/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1118179676&amp;linkCode=as2&amp;tag=rahulpnath-21">Personal Productivity Secrets: Do what you never thought possible with your time and attention&hellip; and regain control of your life</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=1118179676" alt="" /></p></li>
<li><p><a href="http://www.amazon.in/gp/product/1471131823/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1471131823&amp;linkCode=as2&amp;tag=rahulpnath-21">The 7 Habits of Highly Effective People</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=1471131823" alt="" /></p></li>
</ul>


<p>What system do you use to manage your life?. Do drop in the comments. I am still looking to refine more if it helps me to stay on top.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks to Everyone Who Attended My First Public Talk at C#Corner Hyderabad UG]]></title>
    <link href="http://rahulpnath.com/blog/thanks-to-everyone-who-attended-my-first-public-talk-at-ccorner-hyderabad-ug/"/>
    <updated>2014-02-03T12:09:27+05:30</updated>
    <id>http://rahulpnath.com/blog/thanks-to-everyone-who-attended-my-first-public-talk-at-ccorner-hyderabad-ug</id>
    <content type="html"><![CDATA[<p>Thanks to everyone who attended <a href="http://www.c-sharpcorner.com/Events/64/">my very first public talk</a>, at the <a href="http://www.c-sharpcorner.com/">C#Corner</a> <a href="http://www.c-sharpcorner.com/Chapters/6/hyderabad-chapter.aspx">Hyderabad Chapter User Group(UG)</a> on February 1, Saturday on Windows Phone Development. Summary of the event is available <a href="http://www.c-sharpcorner.com/UploadFile/subhendude/C-Sharp-corner-hyderabad-user-group-meet-1-february-2014-offici/">here</a>. It was a very good experience speaking for the first time in front of a large audience, and from my side felt it went well. Here&rsquo;s some follow up information on the talk and also the code samples and presentations used.</p>

<ul>
<li><p>There might be a lot of you who would be planning to get started with phone development or yet in the dilema of whether or not to - <em><strong>&lsquo;Don&rsquo;t think much and just start <a href="http://developer.windowsphone.com/en-us">getting your hands dirty</a></strong></em>&rsquo;.</p></li>
<li><p>If your current project/work does not demand you to use whatever we have got started with it, develop a simple application on your free time/weekends. You would get lot of app ideas at <a href="http://www.dvlup.com/SignIn">DVLUP</a> and may even get rewarded if you crack some of their challenges - <em><strong>Stay motivated.</strong></em></p></li>
<li><p>Make sure whatever you develop is always properly backed up and stored - <em><strong>Use a source control</strong></em>.
<a href="http://www.visualstudio.com/en-us/products/visual-studio-online-overview-vs#SKUDetailList_1">Visual Studio Online</a> or <a href="https://github.com/">Github</a> are great free services that could get you started with.</p></li>
<li><p>Learn more about <a href="http://rahulpnath.com/blog/tag/mvvm/">MVVM</a>.The mvvm toolkit that we were using at the demo is <a href="http://mvvmlight.codeplex.com/">MVVM Light</a>. There are a couple of videos in <a href="http://mvvmlight.codeplex.com/">there</a> that will help you get started with it. <a href="http://compositewpf.codeplex.com/">Prism</a> is also another alternative that we had talked about. - <em><strong>Reuse across platforms</strong></em></p></li>
<li><p>As we had discussed, Getting Started in Windows Phone Development means you have acquired the same skills to Get Started on Windows 8 application too - <em><strong>Get started <a href="http://msdn.microsoft.com/en-in/windows/apps/br211386.aspx">here</a></strong></em>.</p></li>
<li><p>There are a lot of applications that are waiting to be developed for Windows phone and Windows 8 for which people are even ready to pay you. So if you want to earn out of your side projects, then try looking for projects in freelancing communities - <a href="https://www.odesk.com/">ODesk</a>, <a href="http://www.freelancer.in/">Freelancer</a>, <a href="https://www.elance.com/">Elance</a> are some to get you started - <em><strong>Earn while you Learn</strong></em></p></li>
</ul>


<p>Feel free to get in touch in case you need any help while on your Windows phone journey.</p>

<p>The samples and presentation slides is available in the event summary above or <a href="https://github.com/rahulpnath/Speaking/tree/master/Getting%20Started%20with%20Windows%20Phone%208%20App%20Development">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series – Incremental Loading Multiple Data Sources Inside a Pivot]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-incremental-loading-multiple-data-sources-inside-a-pivot/"/>
    <updated>2014-01-21T13:25:25+05:30</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-incremental-loading-multiple-data-sources-inside-a-pivot</id>
    <content type="html"><![CDATA[<p>We had seen on how <a href="http://rahulpnath.com/blog/windows-phone-series-incremental-loading/">incremental loading can be done in a Windows phone</a>, so that data can be fetched as user scrolls down the available data. This is important for data sources that have a large amount of data and when all of these cannot be loaded at once. I have been getting queries on how to implement this for a Pivot control ,in which each pivot item would bind with multiple data sources or endpoints.</p>

<p>An ideal example for this would be the <a href="http://developers.500px.com/">500px api</a>, where we have photos categorized into different streams and each one of them can be in a pivot item. Since we have been talking about <a href="http://rahulpnath.com/blog/tag/mvvm/">mvvm</a>, all along will implement this using MVVM.</p>

<p><img src="http://rahulpnath.com/images/WP_IncrementalLoading.png" alt="image" /></p>

<p>In the sample application here, I have created 2 projects – PCL and Windows Phone project, just for showing the code separation that can be achieved using MVVM. The PCL can be reused with Windows 8 too to develop a similar application, with a few minor tweaks. We would see how we can incrementally load each of these pivot items as and when the user scrolls down on the list of photos.</p>

<p>In the MainViewModel, we create ViewModel’s for each of the PivotItem, which are instances of PhotoCollectionViewModel. Each of these PhotoCollectionViewModel represents a photo stream of 500px, which is defined as a static collection of string. You can add on to this the other streams available in the 500px api to have them displayed too.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">string</span><span class="p">[]</span> <span class="n">photoCollections</span> <span class="p">=</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;popular&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;upcoming&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;editors&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;fresh_today&quot;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="n">List</span> <span class="n">PhotoCollectionViewModels</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="nf">MainViewModel</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PhotoCollectionViewModels</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">();</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">photoCollection</span> <span class="k">in</span> <span class="n">photoCollections</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">PhotoCollectionViewModels</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">PhotoCollectionViewModel</span><span class="p">(</span><span class="n">photoCollection</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the PhotoCollectionViewModel, we create the url from which the data needs to be  fetched from the api, along with the api consumer key, which can be obtained by <a href="http://500px.com/settings/applications">registering an application here</a> and assign the url to a IncrementalLoader, that will take care of incrementally loading the data and returning it to the ViewModel. The url has a placeholder for the current page number(<strong><em>page={0}</em></strong>) that would be populated by the IncrementalLoader on each load.</p>

<p>The IncrementalLoader is a generic class that takes in url from which it has to load the data and returns the generic type that it is assigned to on each LoadNextPage request.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">IncrementalLoader</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="k">where</span> <span class="n">T</span> <span class="p">:</span> <span class="k">class</span>
</span><span class='line'><span class="err">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">BaseUrl</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">int</span> <span class="n">CurrentPageNumber</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">bool</span> <span class="n">isCurrentlyLoading</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">string</span> <span class="n">CurrentUrl</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">BaseUrl</span><span class="p">,</span> <span class="p">++</span><span class="k">this</span><span class="p">.</span><span class="n">CurrentPageNumber</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="nf">IncrementalLoader</span><span class="p">(</span><span class="kt">string</span> <span class="n">baseUrl</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">BaseUrl</span> <span class="p">=</span> <span class="n">baseUrl</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">LoadNextPage</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isCurrentlyLoading</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// call in progress</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">isCurrentlyLoading</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>        <span class="n">HttpClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HttpClient</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Add Microsoft.Bcl.Async nuget for await to work on PCL.</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">client</span><span class="p">.</span><span class="n">GetStringAsync</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">CurrentUrl</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">serializer</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DataContractJsonSerializer</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">));</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">returnObject</span> <span class="p">=</span> <span class="n">serializer</span><span class="p">.</span><span class="n">ReadObject</span><span class="p">(</span><span class="k">new</span> <span class="n">MemoryStream</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">Unicode</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">response</span><span class="p">)))</span> <span class="k">as</span> <span class="n">T</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">isCurrentlyLoading</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">returnObject</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the Main page, the view Model is bound to a Pivot control, which has the templates specified for displaying the list of PhotoCollectionViewModels.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;ContentPanel&quot;</span> <span class="na">Grid.Row=</span><span class="s">&quot;1&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;phone:Pivot</span> <span class="na">Name=</span><span class="s">&quot;photoCollection&quot;</span> <span class="na">ItemsSource=</span><span class="s">&quot;{Binding PhotoCollectionViewModels}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;phone:Pivot.ItemTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;phone:LongListSelector</span> <span class="na">ItemRealized=</span><span class="s">&quot;Photo_Loaded&quot;</span> <span class="na">ItemsSource=</span><span class="s">&quot;{Binding Photos}&quot;</span> <span class="na">IsGroupingEnabled=</span><span class="s">&quot;False&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;phone:LongListSelector.ItemTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;Image</span> <span class="na">Source=</span><span class="s">&quot;{Binding image_url}&quot;</span> <span class="na">Margin=</span><span class="s">&quot;10&quot;</span> <span class="na">Width=</span><span class="s">&quot;500&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;/phone:LongListSelector.ItemTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;/phone:LongListSelector&gt;</span>
</span><span class='line'> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;/phone:Pivot.ItemTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;phone:Pivot.HeaderTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;TextBlock</span> <span class="na">Text=</span><span class="s">&quot;{Binding Title}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;/phone:Pivot.HeaderTemplate&gt;</span>
</span><span class='line'> <span class="nt">&lt;/phone:Pivot&gt;</span>
</span><span class='line'><span class="nt">&lt;/Grid&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the ItemRealized method of the LongListSelector, we decide on whether to load the next page of data or not, based on the current item that gets realized. We load the data if the item realized is third from the last in the current list of photos.We connect the ItemRealized method to the ViewModel code in the code behind.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">Photo_Loaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">ItemRealizationEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LongListSelector</span> <span class="n">longList</span> <span class="p">=</span> <span class="n">sender</span> <span class="k">as</span> <span class="n">LongListSelector</span><span class="p">;</span>
</span><span class='line'>    <span class="n">PhotoCollectionViewModel</span> <span class="n">vm</span> <span class="p">=</span> <span class="n">longList</span><span class="p">.</span><span class="n">DataContext</span> <span class="k">as</span> <span class="n">PhotoCollectionViewModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">vm</span><span class="p">.</span><span class="n">LoadMorePhotos</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Container</span><span class="p">.</span><span class="n">Content</span> <span class="k">as</span> <span class="n">Photo</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">async</span> <span class="n">Task</span> <span class="nf">LoadMorePhotos</span><span class="p">(</span><span class="n">Photo</span> <span class="n">currentPhoto</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">currentPhoto</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">index</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Photos</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">currentPhoto</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">Photos</span><span class="p">.</span><span class="n">Count</span> <span class="p">-</span> <span class="m">3</span> <span class="p">&gt;</span> <span class="n">index</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="n">currentCollection</span> <span class="p">=</span> <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">incrementalLoader</span><span class="p">.</span><span class="n">LoadNextPage</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">photo</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="n">currentCollection</span><span class="p">.</span><span class="n">photos</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">Photos</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">photo</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Whenver a user scrolls on a pivot the corresponding, ItemRealized methods gets called from which we call on to the load the data for that PhotoCollectionViewModel. This way each of the pivots are incrementally loaded as required.</p>

<p>The code for this is available <a href="https://github.com/rahulpnath/Blog/tree/master/IncrementalLoading">here</a>. Make sure you register for an application in the 500px api portal to get a consumer key that needs be updated in the solution for it to run.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series – Using UCWA to Connect to Lync Server]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-using-ucwa-to-connect-to-lync-server/"/>
    <updated>2014-01-12T15:35:08+05:30</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-using-ucwa-to-connect-to-lync-server</id>
    <content type="html"><![CDATA[<p>One of the main things that makes enterprise or intranet applications more lively and connected with your business contacts, is to integrate with <a href="http://office.microsoft.com/en-in/lync/">Lync</a> (formerly Microsoft Office Communicator) and provide options to interact with them. UCWA(Unified Communications Web Api) is a REST API that exposes Lync Server and its presence capabilities, which can be used to enhance your application capabilities. This can also be used to integrate with Windows phone applications as well and will see how to get started with it here.</p>

<p>To connect to a lync server the only details that we would want is the full email address and the password – thanks to <a href="http://msdn.microsoft.com/en-us/library/office/jj900169(v=exchg.150">AutoDiscover</a>.aspx) for exchange, which makes this possible. AutoDiscover is the way to find the users home server so that we can connect to it. The url for auto discover, otherwise called the <a href="https://ucwa.lync.com/documentation/GettingStarted-RootURL">Root Url</a> can take different forms. In this sample I have assumed that it would take the below form, primarily because it works with the test domain that I was using (microsoft.com).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">const</span> <span class="kt">string</span> <span class="n">autoDiscoverUrl</span> <span class="p">=</span> <span class="s">&quot;https://lyncdiscover.{0}&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Creating a UCWA application is the starting point for every app that needs to work with UCWA.  The following steps indicated in the below diagram are to be followed to create an application.
<a href="https://ucwa.lync.com/documentation/KeyTasks-CreateApplication"><img src="http://rahulpnath.com/images/ucwa_createapp.png" alt="HTTP call flow prior to creating an application in UCWA" /></a></p>

<p>Issuing a get request to ‘<a href="https://lyncdiscover.microsoft.com/">https://lyncdiscover.microsoft.com/</a>’, will give the details of the home server that we need to connect to.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resource</span> <span class="na">xmlns=</span><span class="s">&quot;http://schemas.microsoft.com/rtc/2012/03/ucwa&quot;</span> <span class="na">rel=</span><span class="s">&quot;root&quot;</span> <span class="na">href=</span><span class="s">&quot;https://lync32.lyncweb.microsoft.com/Autodiscover/AutodiscoverService.svc/root?originalDomain=microsoft.com&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;user&quot;</span> <span class="na">href=</span><span class="s">&quot;https://lync32.lyncweb.microsoft.com/Autodiscover/AutodiscoverService.svc/root/oauth/user?originalDomain=microsoft.com&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;xframe&quot;</span> <span class="na">href=</span><span class="s">&quot;https://lync32.lyncweb.microsoft.com/Autodiscover/XFrame/XFrame.html&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/resource&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We now need to authenticate the user with the home server.for which we need the oauth url. This can be obtained by issuing a dummy get request to the <em>user </em>url obtained above. This request will fail with an unauthorized access but also returns the url (<a href="https://lync32.lyncweb.microsoft.com/WebTicket/oauthtoken">https://lync32.lyncweb.microsoft.com/WebTicket/oauthtoken</a>) from which the token needs to be obtained</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>HTTP/1.1 401 Unauthorized
</span><span class='line'>Cache-Control: no-cache
</span><span class='line'>Content-Type: text/html
</span><span class='line'>Server: Microsoft-IIS/7.5
</span><span class='line'>WWW-Authenticate: Bearer trusted_issuers=&quot;00000002-0000-0ff1-ce00-000000000000@3bdbdd27-2373-4baf-9469-4b10e76564c6,00000001-0001-0000-c000-000000000000@f686d426-8d16-42db-81b7-ab578e110ccd,00000001-0000-0000-c000-000000000000@72f988bf-86f1-41af-91ab-2d7cd011db47&quot;, client_id=&quot;00000004-0000-0ff1-ce00-000000000000&quot;
</span><span class='line'>WWW-Authenticate: MsRtcOAuth href=&quot;https://lync32.lyncweb.microsoft.com/WebTicket/oauthtoken&quot;,grant_type=&quot;urn:microsoft.rtc:windows,urn:microsoft.rtc:passive,urn:microsoft.rtc:anonmeeting,password&quot;
</span><span class='line'>X-MS-Server-Fqdn: 000DCO2L50FE1G.redmond.corp.microsoft.com
</span><span class='line'>X-Powered-By: ASP.NET
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Date: Sun, 12 Jan 2014 10:47:50 GMT
</span><span class='line'>Content-Length: 1293
</span></code></pre></td></tr></table></div></figure>


<p>UCWA supports Windows Authentication, Anonymous meeting and Password Authentication mechanisms to authorize the user. i am using the Password Authentication here. On successful authentication a token is returned which can be used to issue the get request on the <em>user </em>url with the token in the header.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">Authenticate</span><span class="p">(</span><span class="kt">string</span> <span class="n">authenticateUrl</span><span class="p">,</span> <span class="kt">string</span> <span class="n">authenticateToken</span><span class="p">,</span> <span class="kt">string</span> <span class="n">authenticateTokenType</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Make a GET request to get the ouath url</span>
</span><span class='line'>    <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RestRequest</span><span class="p">(</span><span class="n">authenticateUrl</span><span class="p">);</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">AddHeader</span><span class="p">(</span><span class="s">&quot;Accept&quot;</span><span class="p">,</span> <span class="s">&quot;application/json&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(!</span><span class="kt">string</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">userToken</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">AddHeader</span><span class="p">(</span><span class="s">&quot;Authorization&quot;</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0} {1}&quot;</span><span class="p">,</span> <span class="n">authenticateTokenType</span><span class="p">,</span> <span class="n">authenticateToken</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">ucwaClient</span><span class="p">.</span><span class="n">ExecuteAsync</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">ParseAuthenticateResponse</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>A successful request for the above returns the applications url. The applications url might be hosted on a different server in which case we would need to get a separate token for creating a new application. The host of applications url and the oauth url we got above should be same , or else we need to get a new token. When creating a new application, we add the token only if the host’s are same. Not adding this will again fail with Unauthorized exception giving us the new oauth url.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">CreateNewApplications</span><span class="p">(</span><span class="kt">string</span> <span class="n">applications</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RestRequest</span><span class="p">(</span><span class="n">applications</span><span class="p">,</span> <span class="n">Method</span><span class="p">.</span><span class="n">POST</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">CheckIfSameDomain</span><span class="p">(</span><span class="n">applications</span><span class="p">,</span> <span class="n">oauthUrl</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">request</span><span class="p">.</span><span class="n">AddHeader</span><span class="p">(</span><span class="s">&quot;Authorization&quot;</span><span class="p">,</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0} {1}&quot;</span><span class="p">,</span> <span class="n">applicationTokenType</span><span class="p">,</span> <span class="n">applicationToken</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">applicationBody</span> <span class="p">=</span> <span class="s">@&quot;&quot;&quot;UserAgent&quot;&quot;:&quot;&quot;{0}&quot;&quot;,&quot;&quot;EndpointId&quot;&quot;:&quot;&quot;{1}&quot;&quot;,&quot;&quot;Culture&quot;&quot;:&quot;&quot;en-US&quot;&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">RequestFormat</span> <span class="p">=</span> <span class="n">DataFormat</span><span class="p">.</span><span class="n">Xml</span><span class="p">;</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">AddParameter</span><span class="p">(</span>
</span><span class='line'>        <span class="s">&quot;application/json&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s">&quot;{&quot;</span> <span class="p">+</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="n">applicationBody</span><span class="p">,</span> <span class="s">&quot;UCWAWindowsPhoneSample&quot;</span><span class="p">,</span> <span class="n">Guid</span><span class="p">.</span><span class="n">NewGuid</span><span class="p">().</span><span class="n">ToString</span><span class="p">())</span> <span class="p">+</span> <span class="s">&quot;}&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ParameterType</span><span class="p">.</span><span class="n">RequestBody</span><span class="p">);</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">AddHeader</span><span class="p">(</span><span class="s">&quot;Accept&quot;</span><span class="p">,</span> <span class="s">&quot;application/json&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ucwaClient</span><span class="p">.</span><span class="n">ExecuteAsync</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">CreateNewApplicationsResponse</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="kt">bool</span> <span class="nf">CheckIfSameDomain</span><span class="p">(</span><span class="kt">string</span> <span class="n">url1</span><span class="p">,</span> <span class="kt">string</span> <span class="n">url2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Check if the token is for the correct domain</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="n">url1</span><span class="p">).</span><span class="n">Host</span> <span class="p">==</span> <span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">url2</span><span class="p">).</span><span class="n">Host</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once this is done we have successfully created an application, that can be used to do a lot more things. As for the sample I have just retrieved the user’s full name, department and title that comes as part of successfully creating an application. You can do a lot more like getting the users presence, image, contacts, join meetings and a <a href="https://ucwa.lync.com/documentation/core-features">lot more</a>.</p>

<p><img src="http://rahulpnath.com/images/ucwa_wp_login.png" alt="image" /><img src="http://rahulpnath.com/images/ucwa_wp_loggedIn_details.png" alt="image" /></p>

<p>You can find the sample <a href="https://github.com/rahulpnath/Blog/tree/master/UCWA.WindowsPhone">here</a>.Hope this helps you to build connected enterprise applications.</p>

<p><strong>PS</strong>: I have tested this only against <strong>microsoft.com</strong> domain. In case you find any issues with the domain that you are using please do put it in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVVM – a Windows Phone Scenario – Part 2]]></title>
    <link href="http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario-part-2/"/>
    <updated>2014-01-07T21:35:28+05:30</updated>
    <id>http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario-part-2</id>
    <content type="html"><![CDATA[<p>We had looked into many of the common MVVM scenarios, that we come across while developing windows phone applications in <a href="http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario/">MVVM – A Windows Phone Scenario.</a> We will see some more that we were left off, in this post.</p>

<p><strong>5. Page Navigations and Parameters</strong></p>

<p>For almost all the application, we would need to transfer the control from one page to another, so that the user can navigate through the various contents on the application. In a MVVM application, these navigations would be basically triggered from the ViewModel, as it is there where we need to know where the next control should go to.
Navigation is basically a platform specific feature and we would not want to bring in any dependency between a platform specific feature and our ViewModels. So the best way here is to <em>inverse the dependency</em>, using an interface and inject the dependency via an IoC container. Will call the interface here as <em>INavigationService </em>as given below, and the implementation <em>NavigationService</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">interface</span> <span class="n">INavigationService</span>
</span><span class='line'> <span class="p">{</span>
</span><span class='line'> <span class="k">void</span> <span class="nf">Navigate</span><span class="p">(</span><span class="kt">string</span> <span class="n">uri</span><span class="p">);</span>
</span><span class='line'> <span class="k">void</span> <span class="nf">Navigate</span><span class="p">(</span><span class="kt">string</span> <span class="n">uri</span><span class="p">,</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">parameters</span><span class="p">);</span>
</span><span class='line'> <span class="k">void</span> <span class="nf">PerformActionOnUIThread</span><span class="p">(</span><span class="n">Action</span> <span class="n">action</span><span class="p">);</span>
</span><span class='line'> <span class="k">void</span> <span class="nf">GoBack</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">NavigationService</span> <span class="p">:</span> <span class="n">INavigationService</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Navigate</span><span class="p">(</span><span class="kt">string</span> <span class="n">uri</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">UIDispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="p">((</span><span class="n">PhoneApplicationFrame</span><span class="p">)</span><span class="n">Application</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">RootVisual</span><span class="p">).</span><span class="n">Navigate</span><span class="p">(</span><span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">uri</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Relative</span><span class="p">));</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">Navigate</span><span class="p">(</span><span class="kt">string</span> <span class="n">uri</span><span class="p">,</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">StringBuilder</span> <span class="n">uriBuilder</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>
</span><span class='line'>        <span class="n">uriBuilder</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">uri</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">parameters</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">parameters</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">uriBuilder</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;?&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kt">bool</span> <span class="n">prependAmp</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="n">KeyValuePair</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">parameterPair</span> <span class="k">in</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">prependAmp</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">uriBuilder</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;&amp;&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">uriBuilder</span><span class="p">.</span><span class="n">AppendFormat</span><span class="p">(</span><span class="s">&quot;{0}={1}&quot;</span><span class="p">,</span> <span class="n">parameterPair</span><span class="p">.</span><span class="n">Key</span><span class="p">,</span> <span class="n">parameterPair</span><span class="p">.</span><span class="n">Value</span><span class="p">);</span>
</span><span class='line'>                <span class="n">prependAmp</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">uri</span> <span class="p">=</span> <span class="n">uriBuilder</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
</span><span class='line'>        <span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">UIDispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="p">((</span><span class="n">PhoneApplicationFrame</span><span class="p">)</span><span class="n">Application</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">RootVisual</span><span class="p">).</span><span class="n">Navigate</span><span class="p">(</span><span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">uri</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Relative</span><span class="p">));</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">PerformActionOnUIThread</span><span class="p">(</span><span class="n">Action</span> <span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">UIDispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="n">action</span><span class="p">.</span><span class="n">Invoke</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">void</span> <span class="nf">GoBack</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">UIDispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="p">((</span><span class="n">PhoneApplicationFrame</span><span class="p">)</span><span class="n">Application</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">RootVisual</span><span class="p">).</span><span class="n">GoBack</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is just a sample implementation that you can use. The <em>DispatcherHelper </em>used here is from MVVMLight, which needs to be initialized when the application starts. This can be in the App.xaml.cs in the application constructor</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">Initialize</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here in the above example the parameters are considered to be primitive data-types, which is why it is added as query parameters to the navigation uri. In case you want to have complex parameters passed between pages, you could have a property on the INavigationService, which can be set when calling the Naivgate method. This values can be retrieved when the OnNavigatedTo in the ViewModel.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="kt">object</span> <span class="n">Parameters</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">Navigate</span><span class="p">(</span><span class="kt">string</span> <span class="n">uri</span><span class="p">,</span> <span class="kt">object</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Parameters</span> <span class="p">=</span> <span class="n">parameters</span><span class="p">;</span>
</span><span class='line'>    <span class="n">DispatcherHelper</span><span class="p">.</span><span class="n">UIDispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="p">((</span><span class="n">PhoneApplicationFrame</span><span class="p">)</span><span class="n">Application</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">RootVisual</span><span class="p">).</span><span class="n">Navigate</span><span class="p">(</span><span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">uri</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Relative</span><span class="p">));</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The NavigationService needs to be registered with the MVVM IoC in ViewModelLocator (or anywhere else), and then you could either constructor inject it or create an instance in the BaseViewModel class, so that all ViewModels has a reference to this for navigation.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">SimpleIoc</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Register</span><span class="p">&lt;</span><span class="n">INavigationService</span><span class="p">,</span> <span class="n">NavigationService</span><span class="p">&gt;();</span>
</span></code></pre></td></tr></table></div></figure>


<p>When developing applications for both Windows phone and Windows 8 or x-platform, your ViewModels would remain the same and the NavigationService implementations only would change, and would be accordingly injected into the IoC, when the application starts. So for any platform specific features/dependencies this would be the approach that you would need to choose to minimize the dependencies for your ViewModel. Other cases that I can think of right now is for Push Notifications, where each platform would have their own implementations for registering and raising notifications. So you would use the same approach to <em>inverse the dependencies.</em></p>

<p><strong>6. Page Events</strong></p>

<p>Most of the processing/data loading work in done usually on the OnNavigatedTo of the page. To hook to this event in the ViewModel, we would go ahead and introduce some base classes so that we can reuse this in all over ViewModels. We have a application specific base class for the PhoneApplicationPage. We override the <em>OnNavigatedTo</em> event here and call on to the application specific base ViewModel’s OnNavigatedTo event. For any ViewModel to hook into this event just needs to override this method on the ViewModel, as shown in the sample below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">ApplicationPageBase</span><span class="p">:</span> <span class="n">PhoneApplicationPage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnNavigatedTo</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Navigation</span><span class="p">.</span><span class="n">NavigationEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">OnNavigatedTo</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">DataContext</span> <span class="k">as</span> <span class="n">ApplicationViewModelBase</span><span class="p">).</span><span class="n">OnPageNavigatedTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">NavigationContext</span><span class="p">.</span><span class="n">QueryString</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">ApplicationViewModelBase</span><span class="p">:</span> <span class="n">ViewModelBase</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">virtual</span> <span class="k">void</span> <span class="nf">OnPageNavigatedTo</span><span class="p">(</span><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Override this in any of the ViewModel to hook to the OnNavigatedTo event on the page</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Similarly for any of the other page events also you could create it in the page base class and call the corresponding function on the ViewModel base.</p>

<p><strong>7. Application Bar</strong></p>

<p>I have already put out a detailed post on how to implement an application bar using MVVM. It details out 2 approaches one using Messenger and another having the applciation bar as a service. Check it out at  - <a href="http://rahulpnath.com/blog/windows-phone-series-mvvm-and-applicationbar/">Windows Phone Series – MVVM and ApplicationBar</a></p>

<p>We have seen most of the basic scenarios that we normally come across while developing an application for windows phone and on how MVVM can be applied to that, so that we can make the best out of it. With lots of devices getting out there and having the need to have your application on all platform demands the maximum reuse, so that you can be out there quickly. MVVM plays a very important role in structuring your code making this possible. Even while developing cross platform application using <a href="http://xamarin.com/">Xamarin</a>, MVVM can be used to advantage so that all the application logic is neatly abstracted away from UI.</p>

<p>Do comment in on any of the missed scenarios that you normally come across while developing applications for the Windows platform.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Started With Your Blog]]></title>
    <link href="http://rahulpnath.com/blog/get-started-with-your-blog/"/>
    <updated>2013-09-17T19:01:58+05:30</updated>
    <id>http://rahulpnath.com/blog/get-started-with-your-blog</id>
    <content type="html"><![CDATA[<p>If you are a programmer and don’t have a blog, then there is no better time than now to start one. <a href="http://channel9.msdn.com/Shows/HanselminutesOn9/Hanselminutes-on-9-Social-Networking-for-Developers-Part-1-Every-Developer-Needs-a-Blog">Every developer should have a blog</a>, for a very simple reason – <strong>Otherwise all your work is just going wasted!.</strong> I can bet that the best of your code or ideas would either be in some old email that you hardly have access to or archived or in some backup hard-disk waiting to be formatted or already formatted and all gone. All the thought, research and creativity that you would have spent would be lying just wasted and with little or no use. Having an online presence has really become a necessity in today&rsquo;s connected world, and a blog is the best place to show your presence. I started off answering <a href="http://rahulpnath.com/blog/stars-do-count/">mdsn forums</a> and then figured that most of the people had similar questions and I was giving the same answers many a times, which gave me the thought of blogging answers and posting links to them. So anytime someone asks you something or you do something awesome blog it, so that your work does not get wasted and more people would find it useful. As with the <a href="http://en.wikipedia.org/wiki/Rule_of_three_(computer_programming">rule of three</a>) for refactoring, with blogging it’s just rule of one – <em><strong>blog it always </strong>(</em>even this blog is because some one asked me after I recently moved on to a self hosted blog<em>).</em>
I have had a taste of blogspot and WordPress blog web hosting service,  before moving on to a self-hosted blog here. I think you would have guessed which one I would suggest you to get if you are starting your blog – a self hosted one. Indeed there is some effort that goes in to maintain the blog, but its worth every effort that you put.</p>

<p>I use WordPress as the blogging software and am running it on a Linux server (had to change over from windows, as there were a lot of compatibility issues that I faced). WordPress is a very popular blogging engine and so has an immense collection of themes, plug-in and add-on that are available to enhance yours and your readers experience. Once you get your wordpress installed on your self hosted domain, which should be as easy as clicking a button, install the below plugin’s.</p>

<ol>
<li><p> The first thing would be to <strong>connect with </strong><a href="http://jetpack.me/"><strong>jetpack</strong></a>. This would give you a lot of features including stats, social integration, publicize options and many more.</p></li>
<li><p> Connect with <a href="http://akismet.com/"><strong>akismet</strong></a> using the <a href="http://wordpress.org/plugins/akismet/">plug-in</a> for preventing/moderating spam comments. Akismet provides a free subscription for personal users.</p></li>
<li><p> <a href="http://feedburner.google.com/"><strong>Claim your feed</strong></a> and put it on your blog. You can again use a <a href="http://wordpress.org/plugins/feedburner-form/">feedburner-form</a> if you want.</p></li>
<li><p> Integrate with<strong> </strong><a href="http://www.google.com/analytics/"><strong>Google analytics</strong></a>, if you want more detailed statistics than the one provided with jetpack. Once you get your code, you can use the <a href="http://wordpress.org/plugins/googleanalytics/">plug-in</a> to integrate with your site. This will add the necessary code in all your pages header.</p></li>
<li><p> Make sure you have a <strong>backup plan</strong>, as you would not want all your data to vanish off if something happens with the hosting server. You could either use vaultpress or use freely available plug-in to back up to popular cloud storage like Dropbox, Skydrive or Google drive.</p></li>
<li><p> Get a <strong>good theme</strong> for your blog, there a lot of free and paid ones out there.</p></li>
</ol>


<p>Now that you have most of the things setup, it’s time for you to put up your first page, <a href="http://rahulpnath.com/blog/about/">About me</a>. This is very important as it gives a sense of credibility to your readers, so make sure you have one. For creating content on to your blog, you can either use the online editor or use some offline editor. Personally I use <a href="http://www.microsoft.com/en-in/download/details.aspx?id=8621">Windows live writer</a>. I love using this and all my blogs are written using this. The one plug-in that you would want to get, if you are a developer is <a href="http://precode.codeplex.com/">PreCode</a>, which makes inserting code really easy.
There are a lot more things that your blog would need, you would soon find that out and when you do, please leave a note of it in the comments section below. Happy Blogging!</p>

<p><strong>Edit</strong>: Couple of people were asking about getting started with a free blog. <a href="http://wordpress.com/">Wordpress.com</a> or <a href="https://www.tumblr.com/">Tumblr</a> would be a very good option to start with. Personally I used Wordpress as I felt that better. The advantage with tumblr over wordpress is that you can <a href="http://www.tumblr.com/docs/en/custom_domains">link your custom domain name with tumblr for free</a> while <a href="http://en.support.wordpress.com/domains/map-existing-domain/">worpress charges for linking a custom domain</a>. (You would need to pay for the custom domain in either cases). But then I ended up hosting all myself after moving away from Wordpress.com.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Photography - Learning to Click]]></title>
    <link href="http://rahulpnath.com/blog/photography-learning-to-click/"/>
    <updated>2013-09-08T22:03:31+05:30</updated>
    <id>http://rahulpnath.com/blog/photography-learning-to-click</id>
    <content type="html"><![CDATA[<blockquote><p>“<em>If you want to learn to do something you must figure out how you would do it yourself  </em>”.</p></blockquote>

<p>This is not something that one would want to hear when setting out to learn something new. But I think this is very true whenever you set out to learn something new, it is finally about finding your way, our way rather <strong>my way</strong> <strong>of doing things.</strong></p>

<p>I used to be amazed by most of the photos that&rsquo;s floating around in the social and photography sites. I wondered how people could take these pictures and thought it was some art that one has to be born with. But soon I started seeing lots of my friends too putting up awesome shots of their trips or their neighborhoods. For most of the photos one thing was common, <strong><em>a DSLR.</em></strong></p>

<p>I got myself a <a href="http://www.amazon.in/gp/product/B007O6HQZ0/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=3626&amp;creative=24790&amp;creativeASIN=B007O6HQZ0&amp;linkCode=as2&amp;tag=rahulpnath-21">Canon EOS 550D</a> along with the basic 18-55mm kit lens thinking that was the answer to all the wonderful photos that I wanted to take.  But only to find that my pictures were blurry, out of focus, lacking contrast  and sharpness and mostly no subject at all. I never found life in my photos, which made me believe that I ‘<em>lacked that inborn talent</em>’.
But I didn&rsquo;t want to give up that fast. I started reading, reading a lot on these figuring out what people did, I started talking to my friends whose photos I liked , watching video tutorials and last but not the least, started clicking a lot. As a beginner to dslr photography the learning curve is very high, but not hard. In this post I just want to put out those things that helped me to improve on my photography skills at least to a point where I don&rsquo;t regret shelling out the money to get this awesome equipment.</p>

<ol>
<li><p><strong> Read the manual:</strong> Knowing the equipment is the only way you can use it your benefit, so the very first thing to make sure is to know your camera and its controls well. It would really pay off to take up that manual you left off in the camera packaged box and start reading. If you don&rsquo;t like the way the manual is put out get a book that explains your camera., for me it was <a href="http://www.amazon.in/gp/product/B003NX731K/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=3626&amp;creative=24790&amp;creativeASIN=B003NX731K&amp;linkCode=as2&amp;tag=rahulpnath-21">Canon EOS Rebel T2i / 550D For Dummies</a>. There would be one for your camera too.</p></li>
<li><p><strong>Know the basics: </strong>One of the most popular mistakes we make as a beginner is to not hold the camera properly. <a href="http://digital-photography-school.com/how-to-hold-a-digital-camera">Learn how to hold the camera properly</a> and practice it over and over again. Learn about <a href="http://digital-photography-school.com/aperture">aperture</a>, <a href="http://digital-photography-school.com/using-focal-points-in-photography">focal points</a>, focal length, <a href="http://digital-photography-school.com/shutter-speed">shutter speed</a>, <a href="http://digital-photography-school.com/iso-settings">iso</a> and <a href="http://digital-photography-school.com/introduction-to-white-balance">white balance</a>. These are not rocket science and something that we all would have learned in our physics classes. Just try to read through it over and over again, until have a fairly good idea. Remember to give it some time to get into you and don’t hurry into anything. Read through different articles on the internet and watch some videos in YouTube to get a better understanding.</p></li>
<li><p><strong>Learn the rules: </strong>I was not the guy with that inborn talent, so had to learn how to compose. Composition simply means  choosing what to include and what to exclude from your photos. In addition to that there are also some simple techniques that one can use to improve your composition. <a href="http://digital-photography-school.com/rule-of-thirds">Rule of thirds</a> is the first rule that you want to start using, and also <a href="http://digital-photography-school.com/digital-photography-composition-tips">a lot more</a> like diagonal lines, frames, geometric shapes and much more. But also do learn on how to break the rules.</p></li>
<li><p><strong>Choose your gear: </strong>Most of us start of with a entry level dslr camera with the kit lens, which is good enough for a beginner. Its better to understand the equipment properly and also your tastes in photography before investing more on costlier lenses. Once you have got the hang of it, then you would figure out what you want all by yourself. You would know what is limiting you and what you really want. But to start with you should have a DSLR, a tripod and a camera bag. When you invest on a tripod make sure you don&rsquo;t go cheap on it. A tripod is really a worthy investment and a good one will last you a long time. I made the mistake of getting a <a href="http://www.linkdelight.com/PK034-YUNTENG-VCT-668-Pro-Tripod-with-Damping-Head-f-SLR-Canon-Nikon.html">cheap one</a> first but soon had to spent on a new one which is a Manfrotto with ball head. I found that the pan head tripod was very hard to use and position. It took me for ever on my first tripod to move all these knobs up and down on the pan head, to position for my shot. I liked the ball head ans it was super fast and easy to position for any shot. You should <a href="http://www.youtube.com/watch?v=CW_mb2yNm9Y">check out for yourself</a> with different models before getting one. Also get a decent bag that can carry your dslr and tripod along. Have in mind the possible lens updates that you would make before buying on a bag, so that you don&rsquo;t end up having to buy a new one when you have more lenses. I chose a <a href="http://rahulpnath.com/blog/2013/01/05/what-made-me-choose-vanguard-up-rise-45/">Vanguard Uprise 45 and here&rsquo;s why</a>.This is what is in my <a href="http://www.digitalrev.com/rahulpnath/bag">bag</a> now.</p></li>
<li><p><strong>Shoot in RAW: </strong>DSLR has this capability of shooting in jpeg&rsquo;s like most of the other digital camera&rsquo;s out there. But what really makes it apart is its capability to shoot RAW. You are never going to make the difference unless you switch to shooting in RAW. Now you might think what is big thing it is just about a change in settings. But that small change is gonna take you a long way in photography and make that difference in the pictures that you click. When you shoot in jpeg, what happens is the camera does some built in algorithm to optimize the photos that you take, to apply the contrast, sharpness, balance and what not. But it might not always make the right choice. Especially you might have your white balance off and the colors might appear totally different. Unless you are doing product photography you would not have to worry what the exact white balance is. You could always choose your white balance after the shot in a post production software. A lot more advantages are there while shooting in <a href="http://digital-photography-school.com/raw-vs-jpeg">RAW vs JPEG</a>. I always shoot in Raw + Jpeg mode in my canon, just in case if I want to quickly select some images. Also it might be worthy to compare how better you are doing shooting in RAW by comparing it with a JPEG shot.</p></li>
<li><p><strong>Post Processing: </strong>Shooting in RAW is never complete without talking about post production. With the RAW format it is just like you have an image which does not have any contrast, sharpness, clarity, saturation etc applied by your camera. You need to apply that all yourself using a post production software. Before shooting in RAW I used to use <a href="http://picasa.google.com/">Picasa</a>, to edit my photos mostly to boost up the saturation and increase the clarity. But after moving on to RAW I have figured out that you ought to have better software for editing/post processing. The unanimous choice for all would be <a href="http://www.adobe.com/support/downloads/product.jsp?product=106&amp;platform=Windows">Adobe Camera Raw</a> . If you have <a href="http://www.adobe.com/in/products/photoshop-lightroom.html">Adobe Lightroom</a> it&rsquo;s even better, it is simple camera raw plus a whole lot of other features. And if you have <a href="http://www.adobe.com/in/products/photoshop.html">Adobe Photoshop</a> even better. At the very least you should get Camera Raw.
<strong> ‘</strong>Ahh!! that is photoshopped’. This is a very popular thing that you come across in photography. Using Photoshop/other post-processing tools is not a crime. It is just like you modifying the image properties yourself than having the camera&rsquo;s pre-written algorithm do that. So you are never avoiding processing, Even  when shooting JPEG your camera is doing the processing for you and here you are doing it for yourself. Some people might say the sky never was like that on that day, come&#8217;on you have faked it. But who cares, there is no international committee that says the sky&rsquo;s color should be #XYZ. It&rsquo;s all how you want it to be and how you want your viewers to see it. So if they are liking it, you are liking it then who cares what the color was that day. If you don&rsquo;t want to try out different color, don&rsquo;t do that too. Keep it the way it was that day.
I was always overwhelmed whenever I opened camera-raw/lightroom/photoshop. There are innumerous controls that I think rarely anyone would know end to end(Scott Kelby might know, he has got some excellent <a href="http://www.amazon.in/gp/product/B00DZP3KJ0/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=3626&amp;creative=24790&amp;creativeASIN=B00DZP3KJ0&amp;linkCode=as2&amp;tag=rahulpnath-21">books</a>. There is just a very few set of controls that you would be using always and that you would have to know 90% of the time. So invest your time in understanding them. Check below for some good resources that would help you get started, it really did help me.</p></li>
<li><p><strong>Listen to the experts: </strong>More than books I have felt that video’s convey a bit more while learning about photography. Some of the popular people I like to watch are <a href="http://www.karltaylorphotography.com/">Karl Taylor</a> and <a href="http://scottkelby.com/">Scott Kelby</a>. There a lot of good resources on YouTube that would help. I have created a playlist of my favorite videos, that has helped me a lot with photography. These include post processing, shooting techniques, composition and a lot more. The videos are in order of how much it helped me, though it might not be the same for you.</p>

<p> <p><iframe src="//www.youtube.com/embed/videoseries?list=PL59L9XrzUa-kVwizZ_pRmMOD4y0mrKAtd" height="315" width="560" allowfullscreen="" frameborder="0"></iframe></p></p>

<p> Apart from the videos in the playlist I have also found the videos by <a href="http://www.youtube.com/user/photoexposed">Mike Browne</a> very helpful in understanding the basics on camera and its functionality and also on composition. <a href="http://kelbytraining.com/">Kelby Training</a> also has a very good set of resource that you are sure to enjoy.
 There is a lot more to learn from good photographers. Try to take a look at their work and see what makes you to love those photos. See what is your area of interest and try to work towards that. <a href="http://www.flickr.com/">500px</a> has an amazing collection of awesome photos. &lsquo; <em>The more pictures you see the better you are as a photographer </em>&rsquo;</p></li>
<li><p><strong>Share for Feedback: </strong>You should share the pictures that you take with others, family friends or general public. By doing this you are sure to get a lot of feedback and inputs on how you click. Today there is no dearth for the options that you have got to share your photos. Some of the popular ones are <a href="http://500px.com/">500px</a> , <a href="http://www.flickr.com/">flickr</a> , Facebook etc.  Try to join a photography club near you and go for photo-walks or sharing your pictures with them as you would get more feedback from like minded people. Analyse your shots yourself and see what can be improved, what went good and what went wrong. It will really help you the next time you shoot. Try to reproduce shots that you have seen and liked, that will definitely take you through a whole new learning journey.</p></li>
</ol>


<p>Learning photography seems like a long journey, but this has only put me into the beginner seat and there is a lot more to go. Nevertheless this is an amazing experience and have loved every bit of it. It has opened a whole new me in myself as I see things in different view. Soon you learn to see things through a rectangle frame even without having one. It makes you enjoy the things around you and appreciate nature more. The best places to start clicking without having anyone stare at you are at some parks or zoo&rsquo;s near you. You would have all the time in the world to you and can try out all the tricks that you would have read and learned. Always make sure you click the people who travel with you, so that you keep them happy too!</p>

<p>Do drop in with comments on anything that helped you learn this amazing art !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting a PDF for Your Kindle]]></title>
    <link href="http://rahulpnath.com/blog/converting-a-pdf-for-your-kindle/"/>
    <updated>2013-08-28T21:41:00+05:30</updated>
    <id>http://rahulpnath.com/blog/converting-a-pdf-for-your-kindle</id>
    <content type="html"><![CDATA[<p>Earlier I had blogged about reading an <a href="http://rahulpnath.com/blog/2009/09/14/ebook-or-hard-copy/">eBook vs reading a hard copy</a> and I was preferring the hard copy one back then. But after getting a <a href="http://www.amazon.in/gp/product/B007HCFU90/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=3626&amp;creative=24790&amp;creativeASIN=B007HCFU90&amp;linkCode=as2&amp;tag=rahulpnath-21">Kindle</a><img src="http://ir-in.amazon-adsystem.com/e/ir?t=rahulpnath-21&amp;l=as2&amp;o=31&amp;a=B007HCFU90" alt="" /> things have changed. I prefer MOBI now, as that is the one that is supported by Kindle. I think a Kindle needs no introduction and the only thing I can say about it is “<em>If you don’t own one, get one.</em>  The e-ink display is a real comfort for the eye and it just feels like reading from paper.“ I got the most basic version of Kindle and I am happy with that(at least for now).</p>

<p>The easiest way to get books on your Kindle is to buy them from Amazon, right from your Kindle itself. The experience is so seamless that you just cannot resist from. But often you have pdf’s with you that you would want to read in your Kindle. There are a couple of ways(in fact a lot more), that you can get your pdf to the Kindle.</p>

<ol>
<li><p><strong> </strong>The most direct and easy way is to <a href="http://www.amazon.com/gp/sendtokindle/email">send it to your kindle mail address</a>.  The problem with this is it that it makes the font very small that it is difficult to read.</p></li>
<li><p>There are also a lot of tools that help you manage your eBooks that have kindle support too. <a href="http://calibre-ebook.com/">Calibre</a> is one such popular tool. Calibre has options to send to Kindle, which would convert pdf to the required mobi format. The problem with this is that it keeps inserting line breaks after every other line.</p></li>
</ol>


<p>So with the both the methods I have found that the formatting gets all messed up for the Kindle, making it difficult to have a smooth reading. After a lot of investigating , I have come up with a good method to get my pdf onto the Kindle.</p>

<p>It is a simple <strong><em>3 step</em></strong> process:</p>

<p><strong>Step 1:</strong></p>

<p>Convert the pdf into html with <a href="http://www.mobipocket.com/en/downloadsoft/productdetailscreator.asp">mobipocket creator</a>.  Highlighted in yellow below.</p>

<p><img src="http://rahulpnath.com/images/mobicreator.png" alt="mobi creator" /></p>

<p><strong>Step 2:</strong></p>

<p>From the above step you would get a html output file. Import this converted html format into <a href="http://calibre-ebook.com/">Calibre</a></p>

<p><strong>Step 3:</strong></p>

<p>Right click on the imported html file in Calibre. Select the option to Convert into mobi and transfer it to your Kindle.
Here is a comparison of the all the 3 methods above in order(kindle email, direct calibre and mobicreator + calibre )</p>

<p><img src="http://rahulpnath.com/images/kindle_email.jpg" alt="kindle email" /><img src="http://rahulpnath.com/images/Kindle_Caliber.png" alt="Kindle Caliber" /><img src="http://rahulpnath.com/images/kindle_mobicreator_caliber.png" alt="Kindle mobicreator caliber" /></p>

<p>You can clearly see that last image above is well formatted and matches almost to our original pdf.</p>

<p>This might not be the best way always but most of the time it has got me well formatted books on my Kindle. Please chip in with any better ways in the comments section.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Giveaway : Get a License of Your Choice From Syncfusion]]></title>
    <link href="http://rahulpnath.com/blog/giveaway-get-a-license-of-your-choice-from-syncfusion/"/>
    <updated>2013-08-25T22:03:08+05:30</updated>
    <id>http://rahulpnath.com/blog/giveaway-get-a-license-of-your-choice-from-syncfusion</id>
    <content type="html"><![CDATA[<p>Often we run up into the need for third party controls to give your apps/sites that extra edge that all of us are looking for. Syncfusion provides an excellent collection of controls for various platforms, details of which you can find <a href="http://www.syncfusion.com/products?UTM_medium=rahulblogreview">here</a> .
Syncfusion was generous enough to giveaway a license for the readers of this blog. I didn&rsquo;t want to restrict you to get a license for a platform of my choice, so its all yours. You get to choose which platform license you want out of the the 9 different option(ASP.NET, ASP.NET MVC, JavaScript, Mobile MVC, Silverlight, WinForms, Windows Phone, WinRT and WPF) on the site. So who would be that lucky one?</p>

<h2><strong>How to be that lucky one?</strong></h2>

<p>Check out the form below on how.</p>

<p><a class="rafl" id="rc-52158e0" href="http://www.rafflecopter.com/rafl/display/52158e0/" rel="nofollow">a Rafflecopter giveaway</a><br />
<script type="text/javascript" src="//d12vno17mo87cx.cloudfront.net/embed/rafl/cptr.js"></script></p>


<p>Once the winner is decided you would be notified via email. Choosing the lucky one would be this blog admins responsibility. Any decision made by the admin would be final.</p>

<p>Hope you are that lucky one !</p>

<p><strong> Edit: </strong>Had a very good response and am really happy to announce the winners. Instead of 1 lucky winner I am planning to make it 3. The lucky 3 would be soon contacted with more details</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone Series – Jump Lists]]></title>
    <link href="http://rahulpnath.com/blog/windows-phone-series-jump-lists/"/>
    <updated>2013-08-25T09:53:00+05:30</updated>
    <id>http://rahulpnath.com/blog/windows-phone-series-jump-lists</id>
    <content type="html"><![CDATA[<p>One of the best things about the windows phone is that way you can navigate large lists of data.  Jumplist provides an easy and fast way to navigate large data, just like we do in the contacts hub or the apps collection. It would be great to have this behaviour even in the apps that we develop so that we can give a consistent experience to our application users.
Jumplist can be implemented using LongListSelector, which is part of the <a href="http://phone.codeplex.com/">Windows Phone toolkit</a> for Windows phone 7. With Windows Phone 8 this is included along with the sdk. Implementing jump list with the longlistselector is easy enough, that you can get this into your application in a few minutes. Lets see how.
If you are already using a listbox then you should be changing it to a longlistselector or if you are already using that, then you might be using it in the “ungrouped mode”, by setting IsFlatList=”True”. Change this to False.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;toolkit:LongListSelector</span> <span class="na">Name=</span><span class="s">&quot;allPersons&quot;</span> <span class="na">IsFlatList=</span><span class="s">&quot;False&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/toolkit:LongListSelector&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We need to specify a few templates for the date to be rendered to our needs as shown below. In this example we would be looking at a contacts sample.</p>

<p><img src="http://rahulpnath.com/images/wp_jumplist_items.png" alt="windows_phone_jumplist_items" /><img src="http://rahulpnath.com/images/wp_jumplist_groups.png" alt="windows_phone_jumplist_groups" /></p>

<p><strong>ItemTemplate</strong></p>

<p>The itemtemplate specifies how the bound list of items should be displayed. This would be the same as that you have been using earlier for your listbox.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;toolkit:LongListSelector.ItemTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;TextBlock</span> <span class="na">Text=</span><span class="s">&quot;{Binding Name}&quot;</span> <span class="na">FontSize=</span><span class="s">&quot;30&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'><span class="nt">&lt;/toolkit:LongListSelector.ItemTemplate&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GroupHeaderTemplate</strong></p>

<p>The groupheadertemplate specifies the template for each header of the group.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;toolkit:LongListSelector.GroupHeaderTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'>       <span class="nt">&lt;Border</span> <span class="na">Background=</span><span class="s">&quot;Red&quot;</span> <span class="na">HorizontalAlignment=</span><span class="s">&quot;Left&quot;</span> <span class="na">Width=</span><span class="s">&quot;50&quot;</span> <span class="na">Height=</span><span class="s">&quot;50&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>         <span class="nt">&lt;TextBlock</span> <span class="na">Text=</span><span class="s">&quot;{Binding Title}&quot;</span> <span class="na">FontSize=</span><span class="s">&quot;30&quot;</span> <span class="na">HorizontalAlignment=</span><span class="s">&quot;Center&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>       <span class="nt">&lt;/Border&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'><span class="nt">&lt;/toolkit:LongListSelector.GroupHeaderTemplate&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GroupItemTemplate</strong></p>

<p>The groupitemtemplate specifies the template for the headers, when in group view mode. This is the display that would be presented when we are to choose a group to navigate to.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;toolkit:LongListSelector.GroupItemTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;DataTemplate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Button</span> <span class="na">IsEnabled=</span><span class="s">&quot;{Binding HasData}&quot;</span> <span class="na">BorderThickness=</span><span class="s">&quot;0&quot;</span> <span class="na">Background=</span><span class="s">&quot;Transparent&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;Border</span> <span class="na">Background=</span><span class="s">&quot;Red&quot;</span> <span class="na">BorderThickness=</span><span class="s">&quot;0&quot;</span> <span class="na">Width=</span><span class="s">&quot;60&quot;</span> <span class="na">Height=</span><span class="s">&quot;60&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;TextBlock</span> <span class="na">VerticalAlignment=</span><span class="s">&quot;Center&quot;</span> <span class="na">HorizontalAlignment=</span><span class="s">&quot;Center&quot;</span> <span class="na">FontSize=</span><span class="s">&quot;38&quot;</span> <span class="na">Margin=</span><span class="s">&quot;4&quot;</span> <span class="na">Text=</span><span class="s">&quot;{Binding Title}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/Border&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Button&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'><span class="nt">&lt;/toolkit:LongListSelector.GroupItemTemplate&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GroupItemsPanel</strong></p>

<p>The groupitemspanel specifies the panel to be used to display the groupitems. If we are using only alphabets as the group headers, then we would want to wrap each of these items. If our group items are long enough then it would be better to leave it as default which would be a stackpanel.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;toolkit:LongListSelector.GroupItemsPanel&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ItemsPanelTemplate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;toolkit:WrapPanel</span> <span class="na">Margin=</span><span class="s">&quot;5&quot;</span> <span class="na">Background=</span><span class="s">&quot;Black&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ItemsPanelTemplate&gt;</span>
</span><span class='line'><span class="nt">&lt;/toolkit:LongListSelector.GroupItemsPanel&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We need to group the data that gets bound to the list. For a normal listbox you would either bind a List or an ObservableCollection. In this we would need to group the data that gets bound to the control as groups that we want to display. In this example our data is a list of Persons, and we would want to group the data with their starting character. If the starting character is an alphabet, then we would display that person under that character. For any non-alphabet we would group it under ‘#’. The GroupedPersons in our DataRepository would return the data for us.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'> <span class="k">public</span> <span class="k">static</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;&gt;</span> <span class="n">GroupedPersons</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">List</span><span class="p">&lt;</span><span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;&gt;</span> <span class="n">groupedArticles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;&gt;();</span>
</span><span class='line'>        <span class="kt">char</span><span class="p">[]</span> <span class="n">az</span> <span class="p">=</span> <span class="n">Enumerable</span><span class="p">.</span><span class="n">Range</span><span class="p">(</span><span class="sc">&#39;a&#39;</span><span class="p">,</span> <span class="m">26</span><span class="p">).</span><span class="n">Select</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">a</span><span class="p">).</span><span class="n">ToArray</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="kt">char</span> <span class="n">letter</span> <span class="k">in</span> <span class="n">az</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;</span> <span class="n">groupedLetter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;()</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Title</span> <span class="p">=</span> <span class="n">letter</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span>
</span><span class='line'>                <span class="n">Items</span> <span class="p">=</span> <span class="n">Persons</span><span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">Name</span><span class="p">.</span><span class="n">StartsWith</span><span class="p">(</span><span class="n">letter</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="n">StringComparison</span><span class="p">.</span><span class="n">CurrentCultureIgnoreCase</span><span class="p">)).</span><span class="n">Where</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="n">a</span> <span class="p">!=</span> <span class="k">null</span><span class="p">).</span><span class="n">ToList</span><span class="p">()</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>            <span class="n">groupedLetter</span><span class="p">.</span><span class="n">HasData</span> <span class="p">=</span> <span class="n">groupedLetter</span><span class="p">.</span><span class="n">Items</span><span class="p">.</span><span class="n">Any</span><span class="p">();</span>
</span><span class='line'>            <span class="n">groupedArticles</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">groupedLetter</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Articles that start with a number should be added to # tag</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">list</span> <span class="p">=</span> <span class="n">groupedArticles</span><span class="p">.</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">a</span> <span class="p">=&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">Items</span><span class="p">).</span><span class="n">ToList</span><span class="p">();</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">nonAlphabetIssues</span> <span class="p">=</span> <span class="n">Persons</span><span class="p">.</span><span class="n">Except</span><span class="p">(</span><span class="n">list</span><span class="p">);</span>
</span><span class='line'>        <span class="n">groupedArticles</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span>
</span><span class='line'>            <span class="m">0</span><span class="p">,</span>
</span><span class='line'>            <span class="k">new</span> <span class="n">Group</span><span class="p">&lt;</span><span class="n">Person</span><span class="p">&gt;()</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Items</span> <span class="p">=</span> <span class="n">nonAlphabetIssues</span><span class="p">.</span><span class="n">ToList</span><span class="p">(),</span>
</span><span class='line'>                <span class="n">Title</span> <span class="p">=</span> <span class="s">&quot;#&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">HasData</span> <span class="p">=</span> <span class="n">nonAlphabetIssues</span><span class="p">.</span><span class="n">Any</span><span class="p">()</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">groupedArticles</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To get all the characters from A-Z we use the below code, after which it is some simple logics, that would is self explanatory</p>

<pre><code class="csharp"> char[] az = Enumerable.Range('a', 26).Select(a =&gt; (char)a).ToArray();
</code></pre>

<p>This should now have made your flat list into a easily navigable jump list, that your users would love to use and make it easier for them to use you application.</p>

<p>You can find the code for this sample <a href="https://github.com/rahulpnath/JumpList">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP – a Short Dive]]></title>
    <link href="http://rahulpnath.com/blog/http-a-short-dive/"/>
    <updated>2013-08-18T21:34:48+05:30</updated>
    <id>http://rahulpnath.com/blog/http-a-short-dive</id>
    <content type="html"><![CDATA[<p>Day in and day out, knowingly or unknowingly we get to use http. While accessing a web site, even the current one that you are reading, you are using http. Http is an application protocol that forms the basis of data communication for the web. As an end user of web pages, it is not necessary to be aware of the protocol, but as developers we ought to know in detail about the protocol and its possibilities.</p>

<p>You could find in detail about the entire protocol spec, <a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">here</a>.  If you have already gone through it in its entirety then this blog might be of very little or no help at all. For the others, who I suppose majority of us would be this is just about pointing you to another resource that would take hardly a couple of hours of your time, to get enough information on the protocol.</p>

<p><img class="left" src="http://rahulpnath.com/images/http_succinctly.png"  alt="http succinctly" /></p>

<p>With all the concise and precise information , <strong><a href="http://www.syncfusion.com/resources/techportal/ebooks?UTM_medium=rahulblogreview">Syncfusion’s Succinctly series</a></strong> has a very good resource covering <a href="http://www.syncfusion.com/resources/techportal/ebooks/http?UTM_medium=rahulblogreview"><strong>HTTP</strong></a>.  As the name, succinctly suggests, this book series gives you enough information that enables you to master a wide range of topics.  All you need to do is to fill up a contact form and get access to all the books in kindle and pdf format, all for free.  As a company this is a a very good contribution that Syncfusion is making to the community giving away all these resources for free.</p>

<p>The HTTP Succinctly book is written by <a href="http://odetocode.com/">Scott Allen</a> and it covers Resources, Messages, Connections, Web Architecture, State and Security.</p>

<p>The book details on the url format , encoding and various media types and how they are served when a request is made. It expands on the request , response  messages and and different response status codes.  Scott goes on to explain on how http uses the underlying tcp protocol, to transfer messages across the network and how browsers open parallel connections to speed up the way web sites are delivered to us.  If it was not for proxies and caching the web would not be as scalable as it is today. The protocol would not be complete without mentioning about these and so does this one.  Http being a stateless protocol, maintaining state is a very important thing for developers to provide a good experience to the users. The book touches on cookies, its uses, types and downsides. The book closes on discussing about security and different modes of authentication.
The HTTP Succinctly discusses on all the important topics of the protocol required to us as developers, and I would strongly urge any web developer to read through this 55 pages of concise and precise information. Having such books takes away the need for searching through the web and figuring out all related articles and blog posts to get the required information.  Hope to see more books getting added into this series of books.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVVM – a Windows Phone Scenario]]></title>
    <link href="http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario/"/>
    <updated>2013-07-26T10:51:51+05:30</updated>
    <id>http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario</id>
    <content type="html"><![CDATA[<p>With multiple platforms/devices, embracing the same technology, common architectural patterns become more popular as they provide us with what we want the most – <strong>Reusability. </strong>MVVM has turned out to be a must use architectural pattern while developing for Windows phone/Windows 8 store apps. I had blogged on this, <a href="http://rahulpnath.com/blog/mvvm-does-it-really-matter/">Why MVVM matters</a>.</p>

<p>In this post will take a quick look into the scenarios that would come across while we develop a windows phone app and how that could possibly(as there could be many other ways/approaches too) be implemented using MVVM. I would be covering shorter scenarios in this same post, and those that would be better off in a different one would be linked here . <a href="http://mvvmlight.codeplex.com/">MVVM Light</a> is a very popular toolkit that assists in getting started with MVVM quickly and we would also be using the same. This can be easily added in as a <a href="http://nuget.org/packages/mvvmLight">nuget package</a>
MVVM Light does come with a ViewModelBase class, that all your View Models are to inherit so that you do not have to worry about implementing the <a href="http://msdn.microsoft.com/en-in/library/system.componentmodel.inotifypropertychanged.aspx">INotifyPropertyChanged</a> interface. I would still think of having a intermediate view model base class specific to our app and have all the reusable piece of code that you want across your ViewModels.</p>

<p>Common MVVM scenarios that we come across while developing and probable approaches are discussed below. There might be different ways of achieving the same, and at times we might go off the ‘purist’  MVVM implementation,  i.e.  of not having a code behind at all. As for me I am ok to have code behind at a minimum if it is really required and does not affect the original intent of MVVM(separations of concerns, testability and reusability)</p>

<p><strong>Scenarios</strong></p>

<ol>
<li><p> Binding the View – ViewModel</p></li>
<li><p> ViewModel and Model</p></li>
<li><p> Basic Commanding</p></li>
<li><p> Advanced Commanding</p></li>
<li><p> Page Navigations and Parameters</p></li>
<li><p> Page Events</p></li>
<li><p> Application Bar<strong> </strong></p></li>
</ol>


<p>We will discuss each on in details and the sample that we would be using is that of a photo browser, for <a href="http://500px.com/">500px</a>. You can get the api access <a href="http://developers.500px.com/">here</a></p>

<p><strong>1. Binding the View-ViewModel</strong></p>

<p>MVVM Light comes default with a ViewModelLocator(<strong>VML</strong>) class that will help you with the binding of the ViewModels(<strong>VM’s</strong>) with the corresponding View. The VML will have public properties for the different view models that you have. You can either have different public properties for each of your view model here, or have a property for MainViewModel and then that would in turn have other ViewModel properties. The VML uses a SimpleIOC container to resolve type instances. In simple terms, with an IoC container all we are trying to solve is to minimize the dependency between different types/classes, so that we would never have to instantiate one class(complex type) in another. So whenever a instance of a class is required, the IoC container would generate it for us , and all we would be concerned would be of the interface that we require. For IoC to resolve types for us we need to register the interface and the original class that implements the interface.
Below you see how we are registering for the interface IDataService and setting its implementation class to DataService. Similarly we can also register classes, which would be how we would be registering our VM’s.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">SimpleIoc</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Register</span><span class="p">&lt;</span><span class="n">IDataService</span><span class="p">,</span> <span class="n">DataService</span><span class="p">&gt;();</span>
</span><span class='line'><span class="n">SimpleIoc</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Register</span><span class="p">&lt;</span><span class="n">MainViewModel</span><span class="p">&gt;();</span>
</span></code></pre></td></tr></table></div></figure>


<p>When installing the nuget package itself an instance of the VML is added into the app.xaml class, which can be used in all the View classes to data-bind to the VM.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Application.Resources&gt;</span>
</span><span class='line'>       <span class="nt">&lt;ResourceDictionary&gt;</span>
</span><span class='line'>           <span class="c">&lt;!--Global View Model Locator--&gt;</span>
</span><span class='line'>           <span class="nt">&lt;vm:ViewModelLocator</span> <span class="na">x:Key=</span><span class="s">&quot;Locator&quot;</span>
</span><span class='line'>               <span class="na">d:IsDataSource=</span><span class="s">&quot;True&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'> .....
</span><span class='line'><span class="nt">&lt;Application.Resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This instance is used in all the view classes as below  in the xaml.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>DataContext=&quot;{Binding Main, Source={StaticResource Locator}}&quot;
</span></code></pre></td></tr></table></div></figure>


<p>The Main property returns the View model that should be bound with the view. The ‘ServiceLocator.Current’, returns the default instance of the SimpleIoc. The GetInstance always returns the same instance of the ViewModel as if it would have for a Singleton. If you need a new instance then you would need to pass a specific key(any identifier value) to get a different instance.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="n">MainViewModel</span> <span class="n">Main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ServiceLocator</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GetInstance</span><span class="p">&lt;</span><span class="n">MainViewModel</span><span class="p">&gt;();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>What about the other Views and View Models?</strong></p>

<p>Mostly the main VM would be the one that would be like a hub page, from which the user be able to navigate onto other pages and detailed views., say from a list of friends to a friend, a list of photos to a specific photo. One common thing that we do wrong is to think of View – ViewModel as a one-to-one relationship, meaning one view will have only one ViewModel bound to it.  In our sample app we have a list of photos that needs to be displayed on the main page and on selecting one of the photo, we should be taken to the photo’s detail page. So the mistake to do here would be to have an observable list of Photos in the MainViewModel. We should rather have a list of PhotoViewModel , that would be bound to the list control in the main page. So the MainViewModel would have a property SelectedPhoto, which would be of PhotoViewModel type, that would become the data context of the PhotoDetail page.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>DataContext=&quot;{Binding Main.SelectedPhoto, Source={StaticResource Locator}}&quot;
</span></code></pre></td></tr></table></div></figure>


<p>For views that are not at all related to each other, we can have separate properties in the VML, like say for Settings, About page.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>DataContext=&quot;{Binding About, Source={StaticResource Locator}}&quot;
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="n">AboutViewModel</span> <span class="n">About</span>
</span><span class='line'> <span class="p">{</span>
</span><span class='line'>    <span class="k">get</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ServiceLocator</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GetInstance</span><span class="p">&lt;</span><span class="n">AboutViewModel</span><span class="p">&gt;();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So whenever you have hierarchical pages, it would mostly be that your parent/callee will have the ViewModel property that you would bind to like SelectedPhoto in MainViewModel and for cases you have separate navigations you can have a property exposed in VML like About, Main.</p>

<p><strong>2. ViewModel and Model</strong></p>

<p>Like I mentioned above, one common mistake that we make is to think of View-ViewModel as a one-to-one relationship and normally end up binding the UI to models and not VM’s. We soon tend to hit into problems, such as adding custom properties into models, not finding ways to trigger property changed etc. So it is always best to wrap your models in the VMs. In cases where you are sure you would never want to change/format the data format then you can directly bind to a model. In  cases where you would want to format the data (like say you have a First Name &amp; Last Name property on the model and you want to display Full Name)  you would rather wrap the data into a VM and bind that. You could always use <a href="http://msdn.microsoft.com/en-us/library/system.windows.data.ivalueconverter.aspx">ValueConverters</a>, to format the data specific to the UI, but that always comes with a price, especially on a phone device. Phone’s come with lesser hardware resource and you would want to make the maximum use of it. So it is better to have properties exposed on VM itself rather than having converters all over the UI to format the data. But still you would be in positions where you would absolutely want to use a converter where you should. That is a wise decision that one should make for yourself. (a <a href="https://groups.google.com/forum/?fromgroups#!topic/wpf-disciples/P-JwzRB_GE8">thread</a> that discusses on this )</p>

<p><strong>3. Basic Commanding</strong></p>

<p>It’s not just the data that gets displayed needs to be separated out cleanly. User actions and actions taken should also be cleanly separated from the UI. Commands is what would help us here. Commanding support is currently only for elements that inherit from <a href="http://msdn.microsoft.com/en-us/library/system.windows.controls.primitives.buttonbase.aspx">ButtonBase</a>. As in any mvvm implementation, mvvmlight also has a wrapper that implements <a href="http://msdn.microsoft.com/en-us/library/system.windows.input.icommand.aspx">ICommand</a> interface for us, which is RelayCommand. An instance of this can be directly bound to the Command property, for those elements that inherits from ButtonBase. Below is how you would wire up the command to a button on a page</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span> <span class="na">Content=</span><span class="s">&quot;My Command&quot;</span> <span class="na">Command=</span><span class="s">&quot;{Binding MyCommand}&quot;</span>
</span><span class='line'>    <span class="na">VerticalAlignment=</span><span class="s">&quot;Center&quot;</span> <span class="na">HorizontalAlignment=</span><span class="s">&quot;Center&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">MainViewModel</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">MyCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RelayCommand</span><span class="p">(</span><span class="n">OnMyCommand</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="n">RelayCommand</span> <span class="n">MyCommand</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnMyCommand</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;You clicked me :)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>4. Advanced Commanding</strong></p>

<p>It’s not just UI elements that inherit from Buttonbase that we would be using, and hence we definitely need alternatives to bind events of such elements. ListBox SelectionChanged, Page loaded etc are very common events that one would be interested in while developing phone apps. There are a couple of approaches that one could follow here</p>

<ul>
<li><strong>Wire-up the command from code behind</strong></li>
</ul>


<p>We could  easily wire up all such events from the code-behind class, and have it invoked on the view model. Some might argue here that we are going off the MVVM pattern, which says ‘no code behind’. I don’t this it ever said that in the first place. It is just about decoupling the UI from the code and this is still done. Even binding/commanding is still going to generate code and do the wiring of commands. As long as there is a clear separation of logics and concerns we are good. So I think this this is very well acceptable and the easiest in fact of all the approaches.</p>

<p>Code Behind:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="n">MainViewModel</span> <span class="n">viewModel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">DataContext</span> <span class="k">as</span> <span class="n">MainViewModel</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnNavigatedTo</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Navigation</span><span class="p">.</span><span class="n">NavigationEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">base</span><span class="p">.</span><span class="n">OnNavigatedTo</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'><span class="n">viewModel</span><span class="p">.</span><span class="n">OnnavigatedToCommand</span><span class="p">.</span><span class="n">Execute</span><span class="p">(</span><span class="n">NavigationContext</span><span class="p">.</span><span class="n">QueryString</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>View Model</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">MainViewModel</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OnnavigatedToCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RelayCommand</span><span class="p">&lt;</span><span class="n">IDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;&gt;(</span><span class="n">OnNavigatedTo</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="n">RelayCommand</span><span class="p">&lt;</span><span class="n">IDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;&gt;</span> <span class="n">OnnavigatedToCommand</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnNavigatedTo</span><span class="p">(</span><span class="n">IDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// do whatever you want to here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li> <strong>EventToCommand Behavior</strong></li>
</ul>


<p>With the EventToCommand behavior introduced for Blend, can be used to bind an ICommand from the UI elements. Though it was introduced for Blend, it can be used independently. You would need to add a reference to System.Windows.Interactivity.dll, which is were all these behaviors are implemented. There is a detailed <a href="http://geekswithblogs.net/lbugnion/archive/2009/11/05/mvvm-light-toolkit-v3-alpha-2-eventtocommand-behavior.aspx">post</a> out here on to how to use EventToCommand to trigger commands directly from the UI.</p>

<p>Just to keep a sample here, below would be how it would look like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>xmlns:i=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;
</span><span class='line'>xmlns:command=&quot;clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WP71&quot;
</span><span class='line'>...
</span><span class='line'><span class="nt">&lt;ListBox&gt;</span>
</span><span class='line'><span class="nt">&lt;i:Interaction.Triggers&gt;</span>
</span><span class='line'><span class="nt">&lt;i:EventTrigger</span> <span class="na">EventName=</span><span class="s">&quot;SelectionChanged&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;command:EventToCommand</span> <span class="na">Command=</span><span class="s">&quot;{Binding SelectionChangedCommand}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/i:EventTrigger&gt;</span>
</span><span class='line'><span class="nt">&lt;/i:Interaction.Triggers&gt;</span>
</span><span class='line'><span class="nt">&lt;ListBox.Items&gt;</span>
</span><span class='line'><span class="nt">&lt;ListBoxItem&gt;</span>Item1<span class="nt">&lt;/ListBoxItem&gt;</span>
</span><span class='line'><span class="nt">&lt;ListBoxItem&gt;</span>Item2<span class="nt">&lt;/ListBoxItem&gt;</span>
</span><span class='line'><span class="nt">&lt;ListBoxItem&gt;</span>Item3<span class="nt">&lt;/ListBoxItem&gt;</span>
</span><span class='line'><span class="nt">&lt;/ListBox.Items&gt;</span>
</span><span class='line'><span class="nt">&lt;/ListBox&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">MainViewModel</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SelectionChangedCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RelayCommand</span><span class="p">(</span><span class="n">OnSelectionChangedCommand</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="n">RelayCommand</span> <span class="n">SelectionChangedCommand</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnSelectionChangedCommand</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// do whatever you want to here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Messenger</strong></li>
</ul>


<p>We could also use a messenger service, to propogate UI events to VM’s. MVVMLight  has a built in messenger service that can be used for this. In simple terms a messenger is nothing but a decoupled eventing system, something of a publisher-subscriber model. In the messenger one entity  would send a message and there would be another entity that listens for this message and acts upon it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">Selector_OnSelectionChanged</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">SelectionChangedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Messenger</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Send</span><span class="p">&lt;</span><span class="n">NotificationMessage</span><span class="p">&gt;(</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">NotificationMessage</span><span class="p">(</span><span class="s">&quot;You could have your own items here by using a generic NotificationMessage&lt;&gt;&quot;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">…</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="nf">MainViewModel</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">MessengerInstance</span><span class="p">.</span><span class="n">Register</span><span class="p">&lt;</span><span class="n">NotificationMessage</span><span class="p">&gt;(</span><span class="k">this</span><span class="p">,</span> <span class="n">OnSelectionChanged</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnSelectionChanged</span><span class="p">(</span><span class="n">NotificationMessage</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">// do whatever you want to here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you see above, in the code behind we send a Notification message indicating a click has happened. In the VM we register for the notification message and act upon it. We could send generic objects via the notification message and also create our own messages by inheriting from MessageBase of mvvmlight. This <a href="http://msdn.microsoft.com/en-us/magazine/jj694937.aspx">article</a> gives more information and scenarios around this</p>

<p>We are still left with a lot more scenarios to cover here and I would be covering them in a separate post to keep this one &lsquo;short&rsquo; :)</p>

<p><strong>Edit</strong>: Check out <a href="http://rahulpnath.com/blog/mvvm-a-windows-phone-scenario-part-2/">MVVM – A Windows Phone Scenario – Part 2</a> for the rest of the scenarios</p>

<p> </p>
]]></content>
  </entry>
  
</feed>
